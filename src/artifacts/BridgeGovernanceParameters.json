{
  "address": "0x81262Add69adb826B1Ddb168EC1bA92b584d6dE4",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "newDepositDustThreshold",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "DepositDustThresholdUpdateStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "depositDustThreshold",
          "type": "uint64"
        }
      ],
      "name": "DepositDustThresholdUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "newDepositRevealAheadPeriod",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "DepositRevealAheadPeriodUpdateStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "depositRevealAheadPeriod",
          "type": "uint32"
        }
      ],
      "name": "DepositRevealAheadPeriodUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "depositTreasuryFeeDivisor",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "DepositTreasuryFeeDivisorUpdateStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "depositTreasuryFeeDivisor",
          "type": "uint64"
        }
      ],
      "name": "DepositTreasuryFeeDivisorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "newDepositTxMaxFee",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "DepositTxMaxFeeUpdateStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "depositTxMaxFee",
          "type": "uint64"
        }
      ],
      "name": "DepositTxMaxFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "newFraudChallengeDefeatTimeout",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "FraudChallengeDefeatTimeoutUpdateStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "fraudChallengeDefeatTimeout",
          "type": "uint32"
        }
      ],
      "name": "FraudChallengeDefeatTimeoutUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "newFraudChallengeDepositAmount",
          "type": "uint96"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "FraudChallengeDepositAmountUpdateStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "fraudChallengeDepositAmount",
          "type": "uint96"
        }
      ],
      "name": "FraudChallengeDepositAmountUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "newFraudNotifierRewardMultiplier",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "FraudNotifierRewardMultiplierUpdateStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "fraudNotifierRewardMultiplier",
          "type": "uint32"
        }
      ],
      "name": "FraudNotifierRewardMultiplierUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "newFraudSlashingAmount",
          "type": "uint96"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "FraudSlashingAmountUpdateStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "fraudSlashingAmount",
          "type": "uint96"
        }
      ],
      "name": "FraudSlashingAmountUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "newMovedFundsSweepTimeoutNotifierRewardMultiplier",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "MovedFundsSweepTimeoutNotifierRewardMultiplierUpdateStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "movedFundsSweepTimeoutNotifierRewardMultiplier",
          "type": "uint32"
        }
      ],
      "name": "MovedFundsSweepTimeoutNotifierRewardMultiplierUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "newMovedFundsSweepTimeoutSlashingAmount",
          "type": "uint96"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "MovedFundsSweepTimeoutSlashingAmountUpdateStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "movedFundsSweepTimeoutSlashingAmount",
          "type": "uint96"
        }
      ],
      "name": "MovedFundsSweepTimeoutSlashingAmountUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "newMovedFundsSweepTimeout",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "MovedFundsSweepTimeoutUpdateStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "movedFundsSweepTimeout",
          "type": "uint32"
        }
      ],
      "name": "MovedFundsSweepTimeoutUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "newMovedFundsSweepTxMaxTotalFee",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "MovedFundsSweepTxMaxTotalFeeUpdateStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "movedFundsSweepTxMaxTotalFee",
          "type": "uint64"
        }
      ],
      "name": "MovedFundsSweepTxMaxTotalFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "newMovingFundsCommitmentGasOffset",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "MovingFundsCommitmentGasOffsetUpdateStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "movingFundsCommitmentGasOffset",
          "type": "uint16"
        }
      ],
      "name": "MovingFundsCommitmentGasOffsetUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "newMovingFundsDustThreshold",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "MovingFundsDustThresholdUpdateStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "movingFundsDustThreshold",
          "type": "uint64"
        }
      ],
      "name": "MovingFundsDustThresholdUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "newMovingFundsTimeoutNotifierRewardMultiplier",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "MovingFundsTimeoutNotifierRewardMultiplierUpdateStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "movingFundsTimeoutNotifierRewardMultiplier",
          "type": "uint32"
        }
      ],
      "name": "MovingFundsTimeoutNotifierRewardMultiplierUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "newMovingFundsTimeoutResetDelay",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "MovingFundsTimeoutResetDelayUpdateStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "movingFundsTimeoutResetDelay",
          "type": "uint32"
        }
      ],
      "name": "MovingFundsTimeoutResetDelayUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "newMovingFundsTimeoutSlashingAmount",
          "type": "uint96"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "MovingFundsTimeoutSlashingAmountUpdateStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "movingFundsTimeoutSlashingAmount",
          "type": "uint96"
        }
      ],
      "name": "MovingFundsTimeoutSlashingAmountUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "newMovingFundsTimeout",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "MovingFundsTimeoutUpdateStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "movingFundsTimeout",
          "type": "uint32"
        }
      ],
      "name": "MovingFundsTimeoutUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "newMovingFundsTxMaxTotalFee",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "MovingFundsTxMaxTotalFeeUpdateStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "movingFundsTxMaxTotalFee",
          "type": "uint64"
        }
      ],
      "name": "MovingFundsTxMaxTotalFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "newRedemptionDustThreshold",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "RedemptionDustThresholdUpdateStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "redemptionDustThreshold",
          "type": "uint64"
        }
      ],
      "name": "RedemptionDustThresholdUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "newRedemptionTimeoutNotifierRewardMultiplier",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "RedemptionTimeoutNotifierRewardMultiplierUpdateStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "redemptionTimeoutNotifierRewardMultiplier",
          "type": "uint32"
        }
      ],
      "name": "RedemptionTimeoutNotifierRewardMultiplierUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "newRedemptionTimeoutSlashingAmount",
          "type": "uint96"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "RedemptionTimeoutSlashingAmountUpdateStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "redemptionTimeoutSlashingAmount",
          "type": "uint96"
        }
      ],
      "name": "RedemptionTimeoutSlashingAmountUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "newRedemptionTimeout",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "RedemptionTimeoutUpdateStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "redemptionTimeout",
          "type": "uint32"
        }
      ],
      "name": "RedemptionTimeoutUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "newRedemptionTreasuryFeeDivisor",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "RedemptionTreasuryFeeDivisorUpdateStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "redemptionTreasuryFeeDivisor",
          "type": "uint64"
        }
      ],
      "name": "RedemptionTreasuryFeeDivisorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "newRedemptionTxMaxFee",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "RedemptionTxMaxFeeUpdateStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "redemptionTxMaxFee",
          "type": "uint64"
        }
      ],
      "name": "RedemptionTxMaxFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "newRedemptionTxMaxTotalFee",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "RedemptionTxMaxTotalFeeUpdateStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "redemptionTxMaxTotalFee",
          "type": "uint64"
        }
      ],
      "name": "RedemptionTxMaxTotalFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newTreasury",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "TreasuryUpdateStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "treasury",
          "type": "address"
        }
      ],
      "name": "TreasuryUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "newWalletClosingPeriod",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "WalletClosingPeriodUpdateStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "walletClosingPeriod",
          "type": "uint32"
        }
      ],
      "name": "WalletClosingPeriodUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "newWalletClosureMinBtcBalance",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "WalletClosureMinBtcBalanceUpdateStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "walletClosureMinBtcBalance",
          "type": "uint64"
        }
      ],
      "name": "WalletClosureMinBtcBalanceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "newWalletCreationMaxBtcBalance",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "WalletCreationMaxBtcBalanceUpdateStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "walletCreationMaxBtcBalance",
          "type": "uint64"
        }
      ],
      "name": "WalletCreationMaxBtcBalanceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "newWalletCreationMinBtcBalance",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "WalletCreationMinBtcBalanceUpdateStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "walletCreationMinBtcBalance",
          "type": "uint64"
        }
      ],
      "name": "WalletCreationMinBtcBalanceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "newWalletCreationPeriod",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "WalletCreationPeriodUpdateStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "walletCreationPeriod",
          "type": "uint32"
        }
      ],
      "name": "WalletCreationPeriodUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "newWalletMaxAge",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "WalletMaxAgeUpdateStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "walletMaxAge",
          "type": "uint32"
        }
      ],
      "name": "WalletMaxAgeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "newWalletMaxBtcTransfer",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "WalletMaxBtcTransferUpdateStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "walletMaxBtcTransfer",
          "type": "uint64"
        }
      ],
      "name": "WalletMaxBtcTransferUpdated",
      "type": "event"
    }
  ],
  "transactionHash": "0x46e23d0b29769dafb5b111a9ca74694d79f7e739e296dc67a4c05f05e79f27cc",
  "receipt": {
    "to": null,
    "from": "0x018c56a5a8b93cB3Bc03005f229AE3D46cD3E7B5",
    "contractAddress": "0x81262Add69adb826B1Ddb168EC1bA92b584d6dE4",
    "transactionIndex": 103,
    "gasUsed": "3215309",
    "logsBloom": "0x
    "blockHash": "0x3d52f4acaab3763db69f7660fd3ab34459d640b27f144ab50493d753e7a4dd52",
    "transactionHash": "0x46e23d0b29769dafb5b111a9ca74694d79f7e739e296dc67a4c05f05e79f27cc",
    "logs": [],
    "blockNumber": 8530165,
    "cumulativeGasUsed": "12960760",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "0f1e699f787234e36a634dfb75f96240",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"newDepositDustThreshold\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"DepositDustThresholdUpdateStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"depositDustThreshold\",\"type\":\"uint64\"}],\"name\":\"DepositDustThresholdUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newDepositRevealAheadPeriod\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"DepositRevealAheadPeriodUpdateStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"depositRevealAheadPeriod\",\"type\":\"uint32\"}],\"name\":\"DepositRevealAheadPeriodUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"depositTreasuryFeeDivisor\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"DepositTreasuryFeeDivisorUpdateStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"depositTreasuryFeeDivisor\",\"type\":\"uint64\"}],\"name\":\"DepositTreasuryFeeDivisorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"newDepositTxMaxFee\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"DepositTxMaxFeeUpdateStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"depositTxMaxFee\",\"type\":\"uint64\"}],\"name\":\"DepositTxMaxFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newFraudChallengeDefeatTimeout\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"FraudChallengeDefeatTimeoutUpdateStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"fraudChallengeDefeatTimeout\",\"type\":\"uint32\"}],\"name\":\"FraudChallengeDefeatTimeoutUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"newFraudChallengeDepositAmount\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"FraudChallengeDepositAmountUpdateStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"fraudChallengeDepositAmount\",\"type\":\"uint96\"}],\"name\":\"FraudChallengeDepositAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newFraudNotifierRewardMultiplier\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"FraudNotifierRewardMultiplierUpdateStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"fraudNotifierRewardMultiplier\",\"type\":\"uint32\"}],\"name\":\"FraudNotifierRewardMultiplierUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"newFraudSlashingAmount\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"FraudSlashingAmountUpdateStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"fraudSlashingAmount\",\"type\":\"uint96\"}],\"name\":\"FraudSlashingAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newMovedFundsSweepTimeoutNotifierRewardMultiplier\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"MovedFundsSweepTimeoutNotifierRewardMultiplierUpdateStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"movedFundsSweepTimeoutNotifierRewardMultiplier\",\"type\":\"uint32\"}],\"name\":\"MovedFundsSweepTimeoutNotifierRewardMultiplierUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"newMovedFundsSweepTimeoutSlashingAmount\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"MovedFundsSweepTimeoutSlashingAmountUpdateStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"movedFundsSweepTimeoutSlashingAmount\",\"type\":\"uint96\"}],\"name\":\"MovedFundsSweepTimeoutSlashingAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newMovedFundsSweepTimeout\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"MovedFundsSweepTimeoutUpdateStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"movedFundsSweepTimeout\",\"type\":\"uint32\"}],\"name\":\"MovedFundsSweepTimeoutUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"newMovedFundsSweepTxMaxTotalFee\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"MovedFundsSweepTxMaxTotalFeeUpdateStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"movedFundsSweepTxMaxTotalFee\",\"type\":\"uint64\"}],\"name\":\"MovedFundsSweepTxMaxTotalFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"newMovingFundsCommitmentGasOffset\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"MovingFundsCommitmentGasOffsetUpdateStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"movingFundsCommitmentGasOffset\",\"type\":\"uint16\"}],\"name\":\"MovingFundsCommitmentGasOffsetUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"newMovingFundsDustThreshold\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"MovingFundsDustThresholdUpdateStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"movingFundsDustThreshold\",\"type\":\"uint64\"}],\"name\":\"MovingFundsDustThresholdUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newMovingFundsTimeoutNotifierRewardMultiplier\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"MovingFundsTimeoutNotifierRewardMultiplierUpdateStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"movingFundsTimeoutNotifierRewardMultiplier\",\"type\":\"uint32\"}],\"name\":\"MovingFundsTimeoutNotifierRewardMultiplierUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newMovingFundsTimeoutResetDelay\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"MovingFundsTimeoutResetDelayUpdateStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"movingFundsTimeoutResetDelay\",\"type\":\"uint32\"}],\"name\":\"MovingFundsTimeoutResetDelayUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"newMovingFundsTimeoutSlashingAmount\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"MovingFundsTimeoutSlashingAmountUpdateStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"movingFundsTimeoutSlashingAmount\",\"type\":\"uint96\"}],\"name\":\"MovingFundsTimeoutSlashingAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newMovingFundsTimeout\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"MovingFundsTimeoutUpdateStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"movingFundsTimeout\",\"type\":\"uint32\"}],\"name\":\"MovingFundsTimeoutUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"newMovingFundsTxMaxTotalFee\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"MovingFundsTxMaxTotalFeeUpdateStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"movingFundsTxMaxTotalFee\",\"type\":\"uint64\"}],\"name\":\"MovingFundsTxMaxTotalFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"newRedemptionDustThreshold\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"RedemptionDustThresholdUpdateStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"redemptionDustThreshold\",\"type\":\"uint64\"}],\"name\":\"RedemptionDustThresholdUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newRedemptionTimeoutNotifierRewardMultiplier\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"RedemptionTimeoutNotifierRewardMultiplierUpdateStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"redemptionTimeoutNotifierRewardMultiplier\",\"type\":\"uint32\"}],\"name\":\"RedemptionTimeoutNotifierRewardMultiplierUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"newRedemptionTimeoutSlashingAmount\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"RedemptionTimeoutSlashingAmountUpdateStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"redemptionTimeoutSlashingAmount\",\"type\":\"uint96\"}],\"name\":\"RedemptionTimeoutSlashingAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newRedemptionTimeout\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"RedemptionTimeoutUpdateStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"redemptionTimeout\",\"type\":\"uint32\"}],\"name\":\"RedemptionTimeoutUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"newRedemptionTreasuryFeeDivisor\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"RedemptionTreasuryFeeDivisorUpdateStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"redemptionTreasuryFeeDivisor\",\"type\":\"uint64\"}],\"name\":\"RedemptionTreasuryFeeDivisorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"newRedemptionTxMaxFee\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"RedemptionTxMaxFeeUpdateStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"redemptionTxMaxFee\",\"type\":\"uint64\"}],\"name\":\"RedemptionTxMaxFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"newRedemptionTxMaxTotalFee\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"RedemptionTxMaxTotalFeeUpdateStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"redemptionTxMaxTotalFee\",\"type\":\"uint64\"}],\"name\":\"RedemptionTxMaxTotalFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"TreasuryUpdateStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"}],\"name\":\"TreasuryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newWalletClosingPeriod\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"WalletClosingPeriodUpdateStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"walletClosingPeriod\",\"type\":\"uint32\"}],\"name\":\"WalletClosingPeriodUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"newWalletClosureMinBtcBalance\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"WalletClosureMinBtcBalanceUpdateStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"walletClosureMinBtcBalance\",\"type\":\"uint64\"}],\"name\":\"WalletClosureMinBtcBalanceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"newWalletCreationMaxBtcBalance\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"WalletCreationMaxBtcBalanceUpdateStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"walletCreationMaxBtcBalance\",\"type\":\"uint64\"}],\"name\":\"WalletCreationMaxBtcBalanceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"newWalletCreationMinBtcBalance\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"WalletCreationMinBtcBalanceUpdateStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"walletCreationMinBtcBalance\",\"type\":\"uint64\"}],\"name\":\"WalletCreationMinBtcBalanceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newWalletCreationPeriod\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"WalletCreationPeriodUpdateStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"walletCreationPeriod\",\"type\":\"uint32\"}],\"name\":\"WalletCreationPeriodUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newWalletMaxAge\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"WalletMaxAgeUpdateStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"walletMaxAge\",\"type\":\"uint32\"}],\"name\":\"WalletMaxAgeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"newWalletMaxBtcTransfer\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"WalletMaxBtcTransferUpdateStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"walletMaxBtcTransfer\",\"type\":\"uint64\"}],\"name\":\"WalletMaxBtcTransferUpdated\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"beginDepositDustThresholdUpdate(BridgeGovernanceParameters.DepositData storage,uint64)\":{\"params\":{\"_newDepositDustThreshold\":\"New deposit dust threshold amount.\"}},\"beginDepositRevealAheadPeriodUpdate(BridgeGovernanceParameters.DepositData storage,uint32)\":{\"params\":{\"_newDepositRevealAheadPeriod\":\"New deposit reveal ahead period.\"}},\"beginDepositTreasuryFeeDivisorUpdate(BridgeGovernanceParameters.DepositData storage,uint64)\":{\"params\":{\"_newDepositTreasuryFeeDivisor\":\"New deposit treasury fee divisor amount.\"}},\"beginDepositTxMaxFeeUpdate(BridgeGovernanceParameters.DepositData storage,uint64)\":{\"params\":{\"_newDepositTxMaxFee\":\"New deposit tx max fee amount.\"}},\"beginFraudChallengeDefeatTimeoutUpdate(BridgeGovernanceParameters.FraudData storage,uint32)\":{\"params\":{\"_newFraudChallengeDefeatTimeout\":\"New fraud challenge defeat timeout         amount.\"}},\"beginFraudChallengeDepositAmountUpdate(BridgeGovernanceParameters.FraudData storage,uint96)\":{\"params\":{\"_newFraudChallengeDepositAmount\":\"New fraud challenge deposit amount.\"}},\"beginFraudNotifierRewardMultiplierUpdate(BridgeGovernanceParameters.FraudData storage,uint32)\":{\"params\":{\"_newFraudNotifierRewardMultiplier\":\"New fraud notifier reward multiplier         amount.\"}},\"beginFraudSlashingAmountUpdate(BridgeGovernanceParameters.FraudData storage,uint96)\":{\"params\":{\"_newFraudSlashingAmount\":\"New fraud slashing amount.\"}},\"beginMovedFundsSweepTimeoutNotifierRewardMultiplierUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint32)\":{\"params\":{\"_newMovedFundsSweepTimeoutNotifierRewardMultiplier\":\"New moved funds         sweep timeout notifier reward multiplier amount.\"}},\"beginMovedFundsSweepTimeoutSlashingAmountUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint96)\":{\"params\":{\"_newMovedFundsSweepTimeoutSlashingAmount\":\"New moved funds sweep         timeout slashing amount.\"}},\"beginMovedFundsSweepTimeoutUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint32)\":{\"params\":{\"_newMovedFundsSweepTimeout\":\"New moved funds sweep timeout amount.\"}},\"beginMovedFundsSweepTxMaxTotalFeeUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint64)\":{\"params\":{\"_newMovedFundsSweepTxMaxTotalFee\":\"New moved funds sweep tx max total         fee amount.\"}},\"beginMovingFundsCommitmentGasOffsetUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint16)\":{\"params\":{\"_newMovingFundsCommitmentGasOffset\":\"New moving funds commitment        gas offset.\"}},\"beginMovingFundsDustThresholdUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint64)\":{\"params\":{\"_newMovingFundsDustThreshold\":\"New moving funds dust threshold amount.\"}},\"beginMovingFundsTimeoutNotifierRewardMultiplierUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint32)\":{\"params\":{\"_newMovingFundsTimeoutNotifierRewardMultiplier\":\"New moving funds         timeout notifier reward multiplier amount.\"}},\"beginMovingFundsTimeoutResetDelayUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint32)\":{\"params\":{\"_newMovingFundsTimeoutResetDelay\":\"New moving funds timeout reset         delay amount.\"}},\"beginMovingFundsTimeoutSlashingAmountUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint96)\":{\"params\":{\"_newMovingFundsTimeoutSlashingAmount\":\"New moving funds timeout slashing amount.\"}},\"beginMovingFundsTimeoutUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint32)\":{\"params\":{\"_newMovingFundsTimeout\":\"New moving funds timeout amount.\"}},\"beginMovingFundsTxMaxTotalFeeUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint64)\":{\"params\":{\"_newMovingFundsTxMaxTotalFee\":\"New moving funds tx max total fee amount.\"}},\"beginRedemptionDustThresholdUpdate(BridgeGovernanceParameters.RedemptionData storage,uint64)\":{\"params\":{\"_newRedemptionDustThreshold\":\"New redemption dust threshold amount.\"}},\"beginRedemptionTimeoutNotifierRewardMultiplierUpdate(BridgeGovernanceParameters.RedemptionData storage,uint32)\":{\"params\":{\"_newRedemptionTimeoutNotifierRewardMultiplier\":\"New redemption         timeout notifier reward multiplier amount.\"}},\"beginRedemptionTimeoutSlashingAmountUpdate(BridgeGovernanceParameters.RedemptionData storage,uint96)\":{\"params\":{\"_newRedemptionTimeoutSlashingAmount\":\"New redemption timeout slashing         amount.\"}},\"beginRedemptionTimeoutUpdate(BridgeGovernanceParameters.RedemptionData storage,uint32)\":{\"params\":{\"_newRedemptionTimeout\":\"New redemption timeout amount.\"}},\"beginRedemptionTreasuryFeeDivisorUpdate(BridgeGovernanceParameters.RedemptionData storage,uint64)\":{\"params\":{\"_newRedemptionTreasuryFeeDivisor\":\"New redemption treasury fee divisor         amount.\"}},\"beginRedemptionTxMaxFeeUpdate(BridgeGovernanceParameters.RedemptionData storage,uint64)\":{\"params\":{\"_newRedemptionTxMaxFee\":\"New redemption tx max fee amount.\"}},\"beginRedemptionTxMaxTotalFeeUpdate(BridgeGovernanceParameters.RedemptionData storage,uint64)\":{\"params\":{\"_newRedemptionTxMaxTotalFee\":\"New redemption tx max total fee amount.\"}},\"beginTreasuryUpdate(BridgeGovernanceParameters.TreasuryData storage,address)\":{\"details\":\"It does not perform any parameter validation.\",\"params\":{\"_newTreasury\":\"New treasury address.\"}},\"beginWalletClosingPeriodUpdate(BridgeGovernanceParameters.WalletData storage,uint32)\":{\"params\":{\"_newWalletClosingPeriod\":\"New wallet closing period amount.\"}},\"beginWalletClosureMinBtcBalanceUpdate(BridgeGovernanceParameters.WalletData storage,uint64)\":{\"params\":{\"_newWalletClosureMinBtcBalance\":\"New wallet closure min btc balance amount.\"}},\"beginWalletCreationMaxBtcBalanceUpdate(BridgeGovernanceParameters.WalletData storage,uint64)\":{\"params\":{\"_newWalletCreationMaxBtcBalance\":\"New wallet creation max btc balance         amount.\"}},\"beginWalletCreationMinBtcBalanceUpdate(BridgeGovernanceParameters.WalletData storage,uint64)\":{\"params\":{\"_newWalletCreationMinBtcBalance\":\"New wallet creation min btc balance         amount.\"}},\"beginWalletCreationPeriodUpdate(BridgeGovernanceParameters.WalletData storage,uint32)\":{\"params\":{\"_newWalletCreationPeriod\":\"New wallet creation period amount.\"}},\"beginWalletMaxAgeUpdate(BridgeGovernanceParameters.WalletData storage,uint32)\":{\"params\":{\"_newWalletMaxAge\":\"New wallet max age amount.\"}},\"beginWalletMaxBtcTransferUpdate(BridgeGovernanceParameters.WalletData storage,uint64)\":{\"params\":{\"_newWalletMaxBtcTransfer\":\"New wallet max btc transfer amount.\"}},\"finalizeDepositDustThresholdUpdate(BridgeGovernanceParameters.DepositData storage,uint256)\":{\"details\":\"Can be called after the governance delay elapses.\"},\"finalizeDepositRevealAheadPeriodUpdate(BridgeGovernanceParameters.DepositData storage,uint256)\":{\"details\":\"Can be called after the governance delay elapses.\"},\"finalizeDepositTreasuryFeeDivisorUpdate(BridgeGovernanceParameters.DepositData storage,uint256)\":{\"details\":\"Can be called after the governance delay elapses.\"},\"finalizeDepositTxMaxFeeUpdate(BridgeGovernanceParameters.DepositData storage,uint256)\":{\"details\":\"Can be called after the governance delay elapses.\"},\"finalizeFraudChallengeDefeatTimeoutUpdate(BridgeGovernanceParameters.FraudData storage,uint256)\":{\"details\":\"Can be called after the governance delay elapses.\"},\"finalizeFraudChallengeDepositAmountUpdate(BridgeGovernanceParameters.FraudData storage,uint256)\":{\"details\":\"Can be called after the governance delay elapses.\"},\"finalizeFraudNotifierRewardMultiplierUpdate(BridgeGovernanceParameters.FraudData storage,uint256)\":{\"details\":\"Can be called after the governance delay elapses.\"},\"finalizeFraudSlashingAmountUpdate(BridgeGovernanceParameters.FraudData storage,uint256)\":{\"details\":\"Can be called after the governance delay elapses.\"},\"finalizeMovedFundsSweepTimeoutNotifierRewardMultiplierUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)\":{\"details\":\"Can be called after the governance delay elapses.\"},\"finalizeMovedFundsSweepTimeoutSlashingAmountUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)\":{\"details\":\"Can be called after the governance delay elapses.\"},\"finalizeMovedFundsSweepTimeoutUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)\":{\"details\":\"Can be called after the governance delay elapses.\"},\"finalizeMovedFundsSweepTxMaxTotalFeeUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)\":{\"details\":\"Can be called after the governance delay elapses.\"},\"finalizeMovingFundsCommitmentGasOffsetUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)\":{\"details\":\"Can be called after the governance delay elapses.\"},\"finalizeMovingFundsDustThresholdUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)\":{\"details\":\"Can be called after the governance delay elapses.\"},\"finalizeMovingFundsTimeoutNotifierRewardMultiplierUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)\":{\"details\":\"Can be called after the governance delay elapses.\"},\"finalizeMovingFundsTimeoutResetDelayUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)\":{\"details\":\"Can be called after the governance delay elapses.\"},\"finalizeMovingFundsTimeoutSlashingAmountUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)\":{\"details\":\"Can be called after the governance delay elapses.\"},\"finalizeMovingFundsTimeoutUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)\":{\"details\":\"Can be called after the governance delay elapses.\"},\"finalizeMovingFundsTxMaxTotalFeeUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)\":{\"details\":\"Can be called after the governance delay elapses.\"},\"finalizeRedemptionDustThresholdUpdate(BridgeGovernanceParameters.RedemptionData storage,uint256)\":{\"details\":\"Can be called after the governance delay elapses.\"},\"finalizeRedemptionTimeoutNotifierRewardMultiplierUpdate(BridgeGovernanceParameters.RedemptionData storage,uint256)\":{\"details\":\"Can be called after the governance delay elapses.\"},\"finalizeRedemptionTimeoutSlashingAmountUpdate(BridgeGovernanceParameters.RedemptionData storage,uint256)\":{\"details\":\"Can be called after the governance delay elapses.\"},\"finalizeRedemptionTimeoutUpdate(BridgeGovernanceParameters.RedemptionData storage,uint256)\":{\"details\":\"Can be called after the governance delay elapses.\"},\"finalizeRedemptionTreasuryFeeDivisorUpdate(BridgeGovernanceParameters.RedemptionData storage,uint256)\":{\"details\":\"Can be called after the governance delay elapses.\"},\"finalizeRedemptionTxMaxFeeUpdate(BridgeGovernanceParameters.RedemptionData storage,uint256)\":{\"details\":\"Can be called after the governance delay elapses.\"},\"finalizeRedemptionTxMaxTotalFeeUpdate(BridgeGovernanceParameters.RedemptionData storage,uint256)\":{\"details\":\"Can be called after the governance delay elapses.\"},\"finalizeTreasuryUpdate(BridgeGovernanceParameters.TreasuryData storage,uint256)\":{\"details\":\"Can be called after the governance delay elapses.\"},\"finalizeWalletClosingPeriodUpdate(BridgeGovernanceParameters.WalletData storage,uint256)\":{\"details\":\"Can be called after the governance delay elapses.\"},\"finalizeWalletClosureMinBtcBalanceUpdate(BridgeGovernanceParameters.WalletData storage,uint256)\":{\"details\":\"Can be called after the governance delay elapses.\"},\"finalizeWalletCreationMaxBtcBalanceUpdate(BridgeGovernanceParameters.WalletData storage,uint256)\":{\"details\":\"Can be called after the governance delay elapses.\"},\"finalizeWalletCreationMinBtcBalanceUpdate(BridgeGovernanceParameters.WalletData storage,uint256)\":{\"details\":\"Can be called after the governance delay elapses.\"},\"finalizeWalletCreationPeriodUpdate(BridgeGovernanceParameters.WalletData storage,uint256)\":{\"details\":\"Can be called after the governance delay elapses.\"},\"finalizeWalletMaxAgeUpdate(BridgeGovernanceParameters.WalletData storage,uint256)\":{\"details\":\"Can be called after the governance delay elapses.\"},\"finalizeWalletMaxBtcTransferUpdate(BridgeGovernanceParameters.WalletData storage,uint256)\":{\"details\":\"Can be called after the governance delay elapses.\"}},\"title\":\"Bridge Governance library for storing updatable parameters.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"beginDepositDustThresholdUpdate(BridgeGovernanceParameters.DepositData storage,uint64)\":{\"notice\":\"Begins the deposit dust threshold amount update process.\"},\"beginDepositRevealAheadPeriodUpdate(BridgeGovernanceParameters.DepositData storage,uint32)\":{\"notice\":\"Begins the deposit reveal ahead period update process.\"},\"beginDepositTreasuryFeeDivisorUpdate(BridgeGovernanceParameters.DepositData storage,uint64)\":{\"notice\":\"Begins the deposit treasury fee divisor amount update process.\"},\"beginDepositTxMaxFeeUpdate(BridgeGovernanceParameters.DepositData storage,uint64)\":{\"notice\":\"Begins the deposit tx max fee amount update process.\"},\"beginFraudChallengeDefeatTimeoutUpdate(BridgeGovernanceParameters.FraudData storage,uint32)\":{\"notice\":\"Begins the fraud challenge defeat timeout amount update process.\"},\"beginFraudChallengeDepositAmountUpdate(BridgeGovernanceParameters.FraudData storage,uint96)\":{\"notice\":\"Begins the fraud challenge deposit amount update process.\"},\"beginFraudNotifierRewardMultiplierUpdate(BridgeGovernanceParameters.FraudData storage,uint32)\":{\"notice\":\"Begins the fraud notifier reward multiplier amount update process.\"},\"beginFraudSlashingAmountUpdate(BridgeGovernanceParameters.FraudData storage,uint96)\":{\"notice\":\"Begins the fraud slashing amount update process.\"},\"beginMovedFundsSweepTimeoutNotifierRewardMultiplierUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint32)\":{\"notice\":\"Begins the moved funds sweep timeout notifier reward multiplier         amount update process.\"},\"beginMovedFundsSweepTimeoutSlashingAmountUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint96)\":{\"notice\":\"Begins the moved funds sweep timeout slashing amount update         process.\"},\"beginMovedFundsSweepTimeoutUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint32)\":{\"notice\":\"Begins the moved funds sweep timeout amount update process.\"},\"beginMovedFundsSweepTxMaxTotalFeeUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint64)\":{\"notice\":\"Begins the moved funds sweep tx max total fee amount update process.\"},\"beginMovingFundsCommitmentGasOffsetUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint16)\":{\"notice\":\"Begins the moving funds commitment gas offset update process.\"},\"beginMovingFundsDustThresholdUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint64)\":{\"notice\":\"Begins the moving funds dust threshold amount update process.\"},\"beginMovingFundsTimeoutNotifierRewardMultiplierUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint32)\":{\"notice\":\"Begins the moving funds timeout notifier reward multiplier amount         update process.\"},\"beginMovingFundsTimeoutResetDelayUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint32)\":{\"notice\":\"Begins the moving funds timeout reset delay amount update process.\"},\"beginMovingFundsTimeoutSlashingAmountUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint96)\":{\"notice\":\"Begins the moving funds timeout slashing amount update process.\"},\"beginMovingFundsTimeoutUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint32)\":{\"notice\":\"Begins the moving funds timeout amount update process.\"},\"beginMovingFundsTxMaxTotalFeeUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint64)\":{\"notice\":\"Begins the moving funds tx max total fee amount update process.\"},\"beginRedemptionDustThresholdUpdate(BridgeGovernanceParameters.RedemptionData storage,uint64)\":{\"notice\":\"Begins the redemption dust threshold amount update process.\"},\"beginRedemptionTimeoutNotifierRewardMultiplierUpdate(BridgeGovernanceParameters.RedemptionData storage,uint32)\":{\"notice\":\"Begins the redemption timeout notifier reward multiplier amount         update process.\"},\"beginRedemptionTimeoutSlashingAmountUpdate(BridgeGovernanceParameters.RedemptionData storage,uint96)\":{\"notice\":\"Begins the redemption timeout slashing amount update process.\"},\"beginRedemptionTimeoutUpdate(BridgeGovernanceParameters.RedemptionData storage,uint32)\":{\"notice\":\"Begins the redemption timeout amount update process.\"},\"beginRedemptionTreasuryFeeDivisorUpdate(BridgeGovernanceParameters.RedemptionData storage,uint64)\":{\"notice\":\"Begins the redemption treasury fee divisor amount update process.\"},\"beginRedemptionTxMaxFeeUpdate(BridgeGovernanceParameters.RedemptionData storage,uint64)\":{\"notice\":\"Begins the redemption tx max fee amount update process.\"},\"beginRedemptionTxMaxTotalFeeUpdate(BridgeGovernanceParameters.RedemptionData storage,uint64)\":{\"notice\":\"Begins the redemption tx max total fee amount update process.\"},\"beginTreasuryUpdate(BridgeGovernanceParameters.TreasuryData storage,address)\":{\"notice\":\"Begins the treasury address update process.\"},\"beginWalletClosingPeriodUpdate(BridgeGovernanceParameters.WalletData storage,uint32)\":{\"notice\":\"Begins the wallet closing period amount update process.\"},\"beginWalletClosureMinBtcBalanceUpdate(BridgeGovernanceParameters.WalletData storage,uint64)\":{\"notice\":\"Begins the wallet closure min btc balance amount update process.\"},\"beginWalletCreationMaxBtcBalanceUpdate(BridgeGovernanceParameters.WalletData storage,uint64)\":{\"notice\":\"Begins the wallet creation max btc balance amount update process.\"},\"beginWalletCreationMinBtcBalanceUpdate(BridgeGovernanceParameters.WalletData storage,uint64)\":{\"notice\":\"Begins the wallet creation min btc balance amount update process.\"},\"beginWalletCreationPeriodUpdate(BridgeGovernanceParameters.WalletData storage,uint32)\":{\"notice\":\"Begins the wallet creation period amount update process.\"},\"beginWalletMaxAgeUpdate(BridgeGovernanceParameters.WalletData storage,uint32)\":{\"notice\":\"Begins the wallet max age amount update process.\"},\"beginWalletMaxBtcTransferUpdate(BridgeGovernanceParameters.WalletData storage,uint64)\":{\"notice\":\"Begins the wallet max btc transfer amount update process.\"},\"finalizeDepositDustThresholdUpdate(BridgeGovernanceParameters.DepositData storage,uint256)\":{\"notice\":\"Finalizes the deposit dust threshold amount update process.\"},\"finalizeDepositRevealAheadPeriodUpdate(BridgeGovernanceParameters.DepositData storage,uint256)\":{\"notice\":\"Finalizes the deposit reveal ahead period update process.\"},\"finalizeDepositTreasuryFeeDivisorUpdate(BridgeGovernanceParameters.DepositData storage,uint256)\":{\"notice\":\"Finalizes the deposit treasury fee divisor amount update process.\"},\"finalizeDepositTxMaxFeeUpdate(BridgeGovernanceParameters.DepositData storage,uint256)\":{\"notice\":\"Finalizes the deposit tx max fee amount update process.\"},\"finalizeFraudChallengeDefeatTimeoutUpdate(BridgeGovernanceParameters.FraudData storage,uint256)\":{\"notice\":\"Finalizes the fraud challenge defeat timeout amount update process.\"},\"finalizeFraudChallengeDepositAmountUpdate(BridgeGovernanceParameters.FraudData storage,uint256)\":{\"notice\":\"Finalizes the fraud challenge deposit amount update process.\"},\"finalizeFraudNotifierRewardMultiplierUpdate(BridgeGovernanceParameters.FraudData storage,uint256)\":{\"notice\":\"Finalizes the fraud notifier reward multiplier amount update process.\"},\"finalizeFraudSlashingAmountUpdate(BridgeGovernanceParameters.FraudData storage,uint256)\":{\"notice\":\"Finalizes the fraud slashing amount update process.\"},\"finalizeMovedFundsSweepTimeoutNotifierRewardMultiplierUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)\":{\"notice\":\"Finalizes the moved funds sweep timeout notifier reward multiplier         amount update process.\"},\"finalizeMovedFundsSweepTimeoutSlashingAmountUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)\":{\"notice\":\"Finalizes the moved funds sweep timeout slashing amount         update process.\"},\"finalizeMovedFundsSweepTimeoutUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)\":{\"notice\":\"Finalizes the moved funds sweep timeout amount update process.\"},\"finalizeMovedFundsSweepTxMaxTotalFeeUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)\":{\"notice\":\"Finalizes the moved funds sweep tx max total fee amount update         process.\"},\"finalizeMovingFundsCommitmentGasOffsetUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)\":{\"notice\":\"Finalizes the moving funds commitment gas offset update process.\"},\"finalizeMovingFundsDustThresholdUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)\":{\"notice\":\"Finalizes the moving funds dust threshold amount update process.\"},\"finalizeMovingFundsTimeoutNotifierRewardMultiplierUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)\":{\"notice\":\"Finalizes the moving funds timeout notifier reward multiplier         amount update process.\"},\"finalizeMovingFundsTimeoutResetDelayUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)\":{\"notice\":\"Finalizes the moving funds timeout reset delay amount update process.\"},\"finalizeMovingFundsTimeoutSlashingAmountUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)\":{\"notice\":\"Finalizes the moving funds timeout slashing amount update process.\"},\"finalizeMovingFundsTimeoutUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)\":{\"notice\":\"Finalizes the moving funds timeout amount update process.\"},\"finalizeMovingFundsTxMaxTotalFeeUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)\":{\"notice\":\"Finalizes the moving funds tx max total fee amount update process.\"},\"finalizeRedemptionDustThresholdUpdate(BridgeGovernanceParameters.RedemptionData storage,uint256)\":{\"notice\":\"Finalizes the redemption dust threshold amount update process.\"},\"finalizeRedemptionTimeoutNotifierRewardMultiplierUpdate(BridgeGovernanceParameters.RedemptionData storage,uint256)\":{\"notice\":\"Finalizes the redemption timeout notifier reward multiplier amount update process.\"},\"finalizeRedemptionTimeoutSlashingAmountUpdate(BridgeGovernanceParameters.RedemptionData storage,uint256)\":{\"notice\":\"Finalizes the redemption timeout slashing amount update process.\"},\"finalizeRedemptionTimeoutUpdate(BridgeGovernanceParameters.RedemptionData storage,uint256)\":{\"notice\":\"Finalizes the redemption timeout amount update         process.\"},\"finalizeRedemptionTreasuryFeeDivisorUpdate(BridgeGovernanceParameters.RedemptionData storage,uint256)\":{\"notice\":\"Finalizes the redemption treasury fee divisor amount update process.\"},\"finalizeRedemptionTxMaxFeeUpdate(BridgeGovernanceParameters.RedemptionData storage,uint256)\":{\"notice\":\"Finalizes the redemption tx max fee amount update process.\"},\"finalizeRedemptionTxMaxTotalFeeUpdate(BridgeGovernanceParameters.RedemptionData storage,uint256)\":{\"notice\":\"Finalizes the redemption tx max total fee amount update process.\"},\"finalizeTreasuryUpdate(BridgeGovernanceParameters.TreasuryData storage,uint256)\":{\"notice\":\"Finalizes the treasury address update process.\"},\"finalizeWalletClosingPeriodUpdate(BridgeGovernanceParameters.WalletData storage,uint256)\":{\"notice\":\"Finalizes the wallet closing period amount update process.\"},\"finalizeWalletClosureMinBtcBalanceUpdate(BridgeGovernanceParameters.WalletData storage,uint256)\":{\"notice\":\"Finalizes the wallet closure min btc balance amount update process.\"},\"finalizeWalletCreationMaxBtcBalanceUpdate(BridgeGovernanceParameters.WalletData storage,uint256)\":{\"notice\":\"Finalizes the wallet creation max btc balance amount update process.\"},\"finalizeWalletCreationMinBtcBalanceUpdate(BridgeGovernanceParameters.WalletData storage,uint256)\":{\"notice\":\"Finalizes the wallet creation min btc balance amount update process.\"},\"finalizeWalletCreationPeriodUpdate(BridgeGovernanceParameters.WalletData storage,uint256)\":{\"notice\":\"Finalizes the wallet creation period amount update process.\"},\"finalizeWalletMaxAgeUpdate(BridgeGovernanceParameters.WalletData storage,uint256)\":{\"notice\":\"Finalizes the wallet max age amount update process.\"},\"finalizeWalletMaxBtcTransferUpdate(BridgeGovernanceParameters.WalletData storage,uint256)\":{\"notice\":\"Finalizes the wallet max btc transfer amount update process.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bridge/BridgeGovernanceParameters.sol\":\"BridgeGovernanceParameters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/bridge/BridgeGovernanceParameters.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\r\\n\\r\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\r\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\r\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\r\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\r\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\r\\n// \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588     \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\r\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\r\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\r\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\r\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\r\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\r\\n//               \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c    \\u2590\\u2588\\u2588\\u2588\\u2588\\u258c\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\n/// @title Bridge Governance library for storing updatable parameters.\\r\\nlibrary BridgeGovernanceParameters {\\r\\n    struct TreasuryData {\\r\\n        address newTreasury;\\r\\n        uint256 treasuryChangeInitiated;\\r\\n    }\\r\\n\\r\\n    struct DepositData {\\r\\n        uint64 newDepositDustThreshold;\\r\\n        uint256 depositDustThresholdChangeInitiated;\\r\\n        uint64 newDepositTreasuryFeeDivisor;\\r\\n        uint256 depositTreasuryFeeDivisorChangeInitiated;\\r\\n        uint64 newDepositTxMaxFee;\\r\\n        uint256 depositTxMaxFeeChangeInitiated;\\r\\n        uint32 newDepositRevealAheadPeriod;\\r\\n        uint256 depositRevealAheadPeriodChangeInitiated;\\r\\n    }\\r\\n\\r\\n    struct RedemptionData {\\r\\n        uint64 newRedemptionDustThreshold;\\r\\n        uint256 redemptionDustThresholdChangeInitiated;\\r\\n        uint64 newRedemptionTreasuryFeeDivisor;\\r\\n        uint256 redemptionTreasuryFeeDivisorChangeInitiated;\\r\\n        uint64 newRedemptionTxMaxFee;\\r\\n        uint256 redemptionTxMaxFeeChangeInitiated;\\r\\n        uint64 newRedemptionTxMaxTotalFee;\\r\\n        uint256 redemptionTxMaxTotalFeeChangeInitiated;\\r\\n        uint32 newRedemptionTimeout;\\r\\n        uint256 redemptionTimeoutChangeInitiated;\\r\\n        uint96 newRedemptionTimeoutSlashingAmount;\\r\\n        uint256 redemptionTimeoutSlashingAmountChangeInitiated;\\r\\n        uint32 newRedemptionTimeoutNotifierRewardMultiplier;\\r\\n        uint256 redemptionTimeoutNotifierRewardMultiplierChangeInitiated;\\r\\n    }\\r\\n\\r\\n    struct MovingFundsData {\\r\\n        uint64 newMovingFundsTxMaxTotalFee;\\r\\n        uint256 movingFundsTxMaxTotalFeeChangeInitiated;\\r\\n        uint64 newMovingFundsDustThreshold;\\r\\n        uint256 movingFundsDustThresholdChangeInitiated;\\r\\n        uint32 newMovingFundsTimeoutResetDelay;\\r\\n        uint256 movingFundsTimeoutResetDelayChangeInitiated;\\r\\n        uint32 newMovingFundsTimeout;\\r\\n        uint256 movingFundsTimeoutChangeInitiated;\\r\\n        uint96 newMovingFundsTimeoutSlashingAmount;\\r\\n        uint256 movingFundsTimeoutSlashingAmountChangeInitiated;\\r\\n        uint32 newMovingFundsTimeoutNotifierRewardMultiplier;\\r\\n        uint256 movingFundsTimeoutNotifierRewardMultiplierChangeInitiated;\\r\\n        uint16 newMovingFundsCommitmentGasOffset;\\r\\n        uint256 movingFundsCommitmentGasOffsetChangeInitiated;\\r\\n        uint64 newMovedFundsSweepTxMaxTotalFee;\\r\\n        uint256 movedFundsSweepTxMaxTotalFeeChangeInitiated;\\r\\n        uint32 newMovedFundsSweepTimeout;\\r\\n        uint256 movedFundsSweepTimeoutChangeInitiated;\\r\\n        uint96 newMovedFundsSweepTimeoutSlashingAmount;\\r\\n        uint256 movedFundsSweepTimeoutSlashingAmountChangeInitiated;\\r\\n        uint32 newMovedFundsSweepTimeoutNotifierRewardMultiplier;\\r\\n        uint256 movedFundsSweepTimeoutNotifierRewardMultiplierChangeInitiated;\\r\\n    }\\r\\n\\r\\n    struct WalletData {\\r\\n        uint32 newWalletCreationPeriod;\\r\\n        uint256 walletCreationPeriodChangeInitiated;\\r\\n        uint64 newWalletCreationMinBtcBalance;\\r\\n        uint256 walletCreationMinBtcBalanceChangeInitiated;\\r\\n        uint64 newWalletCreationMaxBtcBalance;\\r\\n        uint256 walletCreationMaxBtcBalanceChangeInitiated;\\r\\n        uint64 newWalletClosureMinBtcBalance;\\r\\n        uint256 walletClosureMinBtcBalanceChangeInitiated;\\r\\n        uint32 newWalletMaxAge;\\r\\n        uint256 walletMaxAgeChangeInitiated;\\r\\n        uint64 newWalletMaxBtcTransfer;\\r\\n        uint256 walletMaxBtcTransferChangeInitiated;\\r\\n        uint32 newWalletClosingPeriod;\\r\\n        uint256 walletClosingPeriodChangeInitiated;\\r\\n    }\\r\\n\\r\\n    struct FraudData {\\r\\n        uint96 newFraudChallengeDepositAmount;\\r\\n        uint256 fraudChallengeDepositAmountChangeInitiated;\\r\\n        uint32 newFraudChallengeDefeatTimeout;\\r\\n        uint256 fraudChallengeDefeatTimeoutChangeInitiated;\\r\\n        uint96 newFraudSlashingAmount;\\r\\n        uint256 fraudSlashingAmountChangeInitiated;\\r\\n        uint32 newFraudNotifierRewardMultiplier;\\r\\n        uint256 fraudNotifierRewardMultiplierChangeInitiated;\\r\\n    }\\r\\n\\r\\n    event DepositDustThresholdUpdateStarted(\\r\\n        uint64 newDepositDustThreshold,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    event DepositDustThresholdUpdated(uint64 depositDustThreshold);\\r\\n\\r\\n    event DepositTreasuryFeeDivisorUpdateStarted(\\r\\n        uint64 depositTreasuryFeeDivisor,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    event DepositTreasuryFeeDivisorUpdated(uint64 depositTreasuryFeeDivisor);\\r\\n\\r\\n    event DepositTxMaxFeeUpdateStarted(\\r\\n        uint64 newDepositTxMaxFee,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    event DepositTxMaxFeeUpdated(uint64 depositTxMaxFee);\\r\\n\\r\\n    event DepositRevealAheadPeriodUpdateStarted(\\r\\n        uint32 newDepositRevealAheadPeriod,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    event DepositRevealAheadPeriodUpdated(uint32 depositRevealAheadPeriod);\\r\\n\\r\\n    event RedemptionDustThresholdUpdateStarted(\\r\\n        uint64 newRedemptionDustThreshold,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    event RedemptionDustThresholdUpdated(uint64 redemptionDustThreshold);\\r\\n\\r\\n    event RedemptionTreasuryFeeDivisorUpdateStarted(\\r\\n        uint64 newRedemptionTreasuryFeeDivisor,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    event RedemptionTreasuryFeeDivisorUpdated(\\r\\n        uint64 redemptionTreasuryFeeDivisor\\r\\n    );\\r\\n\\r\\n    event RedemptionTxMaxFeeUpdateStarted(\\r\\n        uint64 newRedemptionTxMaxFee,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    event RedemptionTxMaxFeeUpdated(uint64 redemptionTxMaxFee);\\r\\n\\r\\n    event RedemptionTxMaxTotalFeeUpdateStarted(\\r\\n        uint64 newRedemptionTxMaxTotalFee,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    event RedemptionTxMaxTotalFeeUpdated(uint64 redemptionTxMaxTotalFee);\\r\\n\\r\\n    event RedemptionTimeoutUpdateStarted(\\r\\n        uint32 newRedemptionTimeout,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    event RedemptionTimeoutUpdated(uint32 redemptionTimeout);\\r\\n\\r\\n    event RedemptionTimeoutSlashingAmountUpdateStarted(\\r\\n        uint96 newRedemptionTimeoutSlashingAmount,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    event RedemptionTimeoutSlashingAmountUpdated(\\r\\n        uint96 redemptionTimeoutSlashingAmount\\r\\n    );\\r\\n\\r\\n    event RedemptionTimeoutNotifierRewardMultiplierUpdateStarted(\\r\\n        uint32 newRedemptionTimeoutNotifierRewardMultiplier,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    event RedemptionTimeoutNotifierRewardMultiplierUpdated(\\r\\n        uint32 redemptionTimeoutNotifierRewardMultiplier\\r\\n    );\\r\\n\\r\\n    event MovingFundsTxMaxTotalFeeUpdateStarted(\\r\\n        uint64 newMovingFundsTxMaxTotalFee,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    event MovingFundsTxMaxTotalFeeUpdated(uint64 movingFundsTxMaxTotalFee);\\r\\n\\r\\n    event MovingFundsDustThresholdUpdateStarted(\\r\\n        uint64 newMovingFundsDustThreshold,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    event MovingFundsDustThresholdUpdated(uint64 movingFundsDustThreshold);\\r\\n\\r\\n    event MovingFundsTimeoutResetDelayUpdateStarted(\\r\\n        uint32 newMovingFundsTimeoutResetDelay,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    event MovingFundsTimeoutResetDelayUpdated(\\r\\n        uint32 movingFundsTimeoutResetDelay\\r\\n    );\\r\\n\\r\\n    event MovingFundsTimeoutUpdateStarted(\\r\\n        uint32 newMovingFundsTimeout,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    event MovingFundsTimeoutUpdated(uint32 movingFundsTimeout);\\r\\n\\r\\n    event MovingFundsTimeoutSlashingAmountUpdateStarted(\\r\\n        uint96 newMovingFundsTimeoutSlashingAmount,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    event MovingFundsTimeoutSlashingAmountUpdated(\\r\\n        uint96 movingFundsTimeoutSlashingAmount\\r\\n    );\\r\\n\\r\\n    event MovingFundsTimeoutNotifierRewardMultiplierUpdateStarted(\\r\\n        uint32 newMovingFundsTimeoutNotifierRewardMultiplier,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    event MovingFundsTimeoutNotifierRewardMultiplierUpdated(\\r\\n        uint32 movingFundsTimeoutNotifierRewardMultiplier\\r\\n    );\\r\\n\\r\\n    event MovingFundsCommitmentGasOffsetUpdateStarted(\\r\\n        uint16 newMovingFundsCommitmentGasOffset,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    event MovingFundsCommitmentGasOffsetUpdated(\\r\\n        uint16 movingFundsCommitmentGasOffset\\r\\n    );\\r\\n\\r\\n    event MovedFundsSweepTxMaxTotalFeeUpdateStarted(\\r\\n        uint64 newMovedFundsSweepTxMaxTotalFee,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    event MovedFundsSweepTxMaxTotalFeeUpdated(\\r\\n        uint64 movedFundsSweepTxMaxTotalFee\\r\\n    );\\r\\n\\r\\n    event MovedFundsSweepTimeoutUpdateStarted(\\r\\n        uint32 newMovedFundsSweepTimeout,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    event MovedFundsSweepTimeoutUpdated(uint32 movedFundsSweepTimeout);\\r\\n\\r\\n    event MovedFundsSweepTimeoutSlashingAmountUpdateStarted(\\r\\n        uint96 newMovedFundsSweepTimeoutSlashingAmount,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    event MovedFundsSweepTimeoutSlashingAmountUpdated(\\r\\n        uint96 movedFundsSweepTimeoutSlashingAmount\\r\\n    );\\r\\n\\r\\n    event MovedFundsSweepTimeoutNotifierRewardMultiplierUpdateStarted(\\r\\n        uint32 newMovedFundsSweepTimeoutNotifierRewardMultiplier,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    event MovedFundsSweepTimeoutNotifierRewardMultiplierUpdated(\\r\\n        uint32 movedFundsSweepTimeoutNotifierRewardMultiplier\\r\\n    );\\r\\n\\r\\n    event WalletCreationPeriodUpdateStarted(\\r\\n        uint32 newWalletCreationPeriod,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    event WalletCreationPeriodUpdated(uint32 walletCreationPeriod);\\r\\n\\r\\n    event WalletCreationMinBtcBalanceUpdateStarted(\\r\\n        uint64 newWalletCreationMinBtcBalance,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    event WalletCreationMinBtcBalanceUpdated(\\r\\n        uint64 walletCreationMinBtcBalance\\r\\n    );\\r\\n\\r\\n    event WalletCreationMaxBtcBalanceUpdateStarted(\\r\\n        uint64 newWalletCreationMaxBtcBalance,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    event WalletCreationMaxBtcBalanceUpdated(\\r\\n        uint64 walletCreationMaxBtcBalance\\r\\n    );\\r\\n\\r\\n    event WalletClosureMinBtcBalanceUpdateStarted(\\r\\n        uint64 newWalletClosureMinBtcBalance,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    event WalletClosureMinBtcBalanceUpdated(uint64 walletClosureMinBtcBalance);\\r\\n\\r\\n    event WalletMaxAgeUpdateStarted(uint32 newWalletMaxAge, uint256 timestamp);\\r\\n    event WalletMaxAgeUpdated(uint32 walletMaxAge);\\r\\n\\r\\n    event WalletMaxBtcTransferUpdateStarted(\\r\\n        uint64 newWalletMaxBtcTransfer,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    event WalletMaxBtcTransferUpdated(uint64 walletMaxBtcTransfer);\\r\\n\\r\\n    event WalletClosingPeriodUpdateStarted(\\r\\n        uint32 newWalletClosingPeriod,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    event WalletClosingPeriodUpdated(uint32 walletClosingPeriod);\\r\\n\\r\\n    event FraudChallengeDepositAmountUpdateStarted(\\r\\n        uint96 newFraudChallengeDepositAmount,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    event FraudChallengeDepositAmountUpdated(\\r\\n        uint96 fraudChallengeDepositAmount\\r\\n    );\\r\\n\\r\\n    event FraudChallengeDefeatTimeoutUpdateStarted(\\r\\n        uint32 newFraudChallengeDefeatTimeout,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    event FraudChallengeDefeatTimeoutUpdated(\\r\\n        uint32 fraudChallengeDefeatTimeout\\r\\n    );\\r\\n\\r\\n    event FraudSlashingAmountUpdateStarted(\\r\\n        uint96 newFraudSlashingAmount,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    event FraudSlashingAmountUpdated(uint96 fraudSlashingAmount);\\r\\n\\r\\n    event FraudNotifierRewardMultiplierUpdateStarted(\\r\\n        uint32 newFraudNotifierRewardMultiplier,\\r\\n        uint256 timestamp\\r\\n    );\\r\\n    event FraudNotifierRewardMultiplierUpdated(\\r\\n        uint32 fraudNotifierRewardMultiplier\\r\\n    );\\r\\n\\r\\n    event TreasuryUpdateStarted(address newTreasury, uint256 timestamp);\\r\\n    event TreasuryUpdated(address treasury);\\r\\n\\r\\n    /// @notice Reverts if called before the governance delay elapses.\\r\\n    /// @param changeInitiatedTimestamp Timestamp indicating the beginning\\r\\n    ///        of the change.\\r\\n    modifier onlyAfterGovernanceDelay(\\r\\n        uint256 changeInitiatedTimestamp,\\r\\n        uint256 governanceDelay\\r\\n    ) {\\r\\n        /* solhint-disable not-rely-on-time */\\r\\n        require(changeInitiatedTimestamp > 0, \\\"Change not initiated\\\");\\r\\n        require(\\r\\n            block.timestamp - changeInitiatedTimestamp >= governanceDelay,\\r\\n            \\\"Governance delay has not elapsed\\\"\\r\\n        );\\r\\n        _;\\r\\n        /* solhint-enable not-rely-on-time */\\r\\n    }\\r\\n\\r\\n    // --- Deposit\\r\\n\\r\\n    /// @notice Begins the deposit dust threshold amount update process.\\r\\n    /// @param _newDepositDustThreshold New deposit dust threshold amount.\\r\\n    function beginDepositDustThresholdUpdate(\\r\\n        DepositData storage self,\\r\\n        uint64 _newDepositDustThreshold\\r\\n    ) external {\\r\\n        /* solhint-disable not-rely-on-time */\\r\\n        self.newDepositDustThreshold = _newDepositDustThreshold;\\r\\n        self.depositDustThresholdChangeInitiated = block.timestamp;\\r\\n        emit DepositDustThresholdUpdateStarted(\\r\\n            _newDepositDustThreshold,\\r\\n            block.timestamp\\r\\n        );\\r\\n        /* solhint-enable not-rely-on-time */\\r\\n    }\\r\\n\\r\\n    /// @notice Finalizes the deposit dust threshold amount update process.\\r\\n    /// @dev Can be called after the governance delay elapses.\\r\\n    function finalizeDepositDustThresholdUpdate(\\r\\n        DepositData storage self,\\r\\n        uint256 governanceDelay\\r\\n    )\\r\\n        external\\r\\n        onlyAfterGovernanceDelay(\\r\\n            self.depositDustThresholdChangeInitiated,\\r\\n            governanceDelay\\r\\n        )\\r\\n    {\\r\\n        emit DepositDustThresholdUpdated(self.newDepositDustThreshold);\\r\\n\\r\\n        self.newDepositDustThreshold = 0;\\r\\n        self.depositDustThresholdChangeInitiated = 0;\\r\\n    }\\r\\n\\r\\n    /// @notice Begins the deposit treasury fee divisor amount update process.\\r\\n    /// @param _newDepositTreasuryFeeDivisor New deposit treasury fee divisor amount.\\r\\n    function beginDepositTreasuryFeeDivisorUpdate(\\r\\n        DepositData storage self,\\r\\n        uint64 _newDepositTreasuryFeeDivisor\\r\\n    ) external {\\r\\n        /* solhint-disable not-rely-on-time */\\r\\n        self.newDepositTreasuryFeeDivisor = _newDepositTreasuryFeeDivisor;\\r\\n        self.depositTreasuryFeeDivisorChangeInitiated = block.timestamp;\\r\\n        emit DepositTreasuryFeeDivisorUpdateStarted(\\r\\n            _newDepositTreasuryFeeDivisor,\\r\\n            block.timestamp\\r\\n        );\\r\\n        /* solhint-enable not-rely-on-time */\\r\\n    }\\r\\n\\r\\n    /// @notice Finalizes the deposit treasury fee divisor amount update process.\\r\\n    /// @dev Can be called after the governance delay elapses.\\r\\n    function finalizeDepositTreasuryFeeDivisorUpdate(\\r\\n        DepositData storage self,\\r\\n        uint256 governanceDelay\\r\\n    )\\r\\n        external\\r\\n        onlyAfterGovernanceDelay(\\r\\n            self.depositTreasuryFeeDivisorChangeInitiated,\\r\\n            governanceDelay\\r\\n        )\\r\\n    {\\r\\n        emit DepositTreasuryFeeDivisorUpdated(\\r\\n            self.newDepositTreasuryFeeDivisor\\r\\n        );\\r\\n\\r\\n        self.newDepositTreasuryFeeDivisor = 0;\\r\\n        self.depositTreasuryFeeDivisorChangeInitiated = 0;\\r\\n    }\\r\\n\\r\\n    /// @notice Begins the deposit tx max fee amount update process.\\r\\n    /// @param _newDepositTxMaxFee New deposit tx max fee amount.\\r\\n    function beginDepositTxMaxFeeUpdate(\\r\\n        DepositData storage self,\\r\\n        uint64 _newDepositTxMaxFee\\r\\n    ) external {\\r\\n        /* solhint-disable not-rely-on-time */\\r\\n        self.newDepositTxMaxFee = _newDepositTxMaxFee;\\r\\n        self.depositTxMaxFeeChangeInitiated = block.timestamp;\\r\\n        emit DepositTxMaxFeeUpdateStarted(_newDepositTxMaxFee, block.timestamp);\\r\\n        /* solhint-enable not-rely-on-time */\\r\\n    }\\r\\n\\r\\n    /// @notice Finalizes the deposit tx max fee amount update process.\\r\\n    /// @dev Can be called after the governance delay elapses.\\r\\n    function finalizeDepositTxMaxFeeUpdate(\\r\\n        DepositData storage self,\\r\\n        uint256 governanceDelay\\r\\n    )\\r\\n        external\\r\\n        onlyAfterGovernanceDelay(\\r\\n            self.depositTxMaxFeeChangeInitiated,\\r\\n            governanceDelay\\r\\n        )\\r\\n    {\\r\\n        emit DepositTxMaxFeeUpdated(self.newDepositTxMaxFee);\\r\\n\\r\\n        self.newDepositTxMaxFee = 0;\\r\\n        self.depositTxMaxFeeChangeInitiated = 0;\\r\\n    }\\r\\n\\r\\n    /// @notice Begins the deposit reveal ahead period update process.\\r\\n    /// @param _newDepositRevealAheadPeriod New deposit reveal ahead period.\\r\\n    function beginDepositRevealAheadPeriodUpdate(\\r\\n        DepositData storage self,\\r\\n        uint32 _newDepositRevealAheadPeriod\\r\\n    ) external {\\r\\n        /* solhint-disable not-rely-on-time */\\r\\n        self.newDepositRevealAheadPeriod = _newDepositRevealAheadPeriod;\\r\\n        self.depositRevealAheadPeriodChangeInitiated = block.timestamp;\\r\\n        emit DepositRevealAheadPeriodUpdateStarted(\\r\\n            _newDepositRevealAheadPeriod,\\r\\n            block.timestamp\\r\\n        );\\r\\n        /* solhint-enable not-rely-on-time */\\r\\n    }\\r\\n\\r\\n    /// @notice Finalizes the deposit reveal ahead period update process.\\r\\n    /// @dev Can be called after the governance delay elapses.\\r\\n    function finalizeDepositRevealAheadPeriodUpdate(\\r\\n        DepositData storage self,\\r\\n        uint256 governanceDelay\\r\\n    )\\r\\n        external\\r\\n        onlyAfterGovernanceDelay(\\r\\n            self.depositRevealAheadPeriodChangeInitiated,\\r\\n            governanceDelay\\r\\n        )\\r\\n    {\\r\\n        emit DepositRevealAheadPeriodUpdated(self.newDepositRevealAheadPeriod);\\r\\n\\r\\n        self.newDepositRevealAheadPeriod = 0;\\r\\n        self.depositRevealAheadPeriodChangeInitiated = 0;\\r\\n    }\\r\\n\\r\\n    // --- Redemption\\r\\n\\r\\n    /// @notice Begins the redemption dust threshold amount update process.\\r\\n    /// @param _newRedemptionDustThreshold New redemption dust threshold amount.\\r\\n    function beginRedemptionDustThresholdUpdate(\\r\\n        RedemptionData storage self,\\r\\n        uint64 _newRedemptionDustThreshold\\r\\n    ) external {\\r\\n        /* solhint-disable not-rely-on-time */\\r\\n        self.newRedemptionDustThreshold = _newRedemptionDustThreshold;\\r\\n        self.redemptionDustThresholdChangeInitiated = block.timestamp;\\r\\n        emit RedemptionDustThresholdUpdateStarted(\\r\\n            _newRedemptionDustThreshold,\\r\\n            block.timestamp\\r\\n        );\\r\\n        /* solhint-enable not-rely-on-time */\\r\\n    }\\r\\n\\r\\n    /// @notice Finalizes the redemption dust threshold amount update process.\\r\\n    /// @dev Can be called after the governance delay elapses.\\r\\n    function finalizeRedemptionDustThresholdUpdate(\\r\\n        RedemptionData storage self,\\r\\n        uint256 governanceDelay\\r\\n    )\\r\\n        external\\r\\n        onlyAfterGovernanceDelay(\\r\\n            self.redemptionDustThresholdChangeInitiated,\\r\\n            governanceDelay\\r\\n        )\\r\\n    {\\r\\n        emit RedemptionDustThresholdUpdated(self.newRedemptionDustThreshold);\\r\\n\\r\\n        self.newRedemptionDustThreshold = 0;\\r\\n        self.redemptionDustThresholdChangeInitiated = 0;\\r\\n    }\\r\\n\\r\\n    /// @notice Begins the redemption treasury fee divisor amount update process.\\r\\n    /// @param _newRedemptionTreasuryFeeDivisor New redemption treasury fee divisor\\r\\n    ///         amount.\\r\\n    function beginRedemptionTreasuryFeeDivisorUpdate(\\r\\n        RedemptionData storage self,\\r\\n        uint64 _newRedemptionTreasuryFeeDivisor\\r\\n    ) external {\\r\\n        /* solhint-disable not-rely-on-time */\\r\\n        self.newRedemptionTreasuryFeeDivisor = _newRedemptionTreasuryFeeDivisor;\\r\\n        self.redemptionTreasuryFeeDivisorChangeInitiated = block.timestamp;\\r\\n        emit RedemptionTreasuryFeeDivisorUpdateStarted(\\r\\n            _newRedemptionTreasuryFeeDivisor,\\r\\n            block.timestamp\\r\\n        );\\r\\n        /* solhint-enable not-rely-on-time */\\r\\n    }\\r\\n\\r\\n    /// @notice Finalizes the redemption treasury fee divisor amount update process.\\r\\n    /// @dev Can be called after the governance delay elapses.\\r\\n    function finalizeRedemptionTreasuryFeeDivisorUpdate(\\r\\n        RedemptionData storage self,\\r\\n        uint256 governanceDelay\\r\\n    )\\r\\n        external\\r\\n        onlyAfterGovernanceDelay(\\r\\n            self.redemptionTreasuryFeeDivisorChangeInitiated,\\r\\n            governanceDelay\\r\\n        )\\r\\n    {\\r\\n        emit RedemptionTreasuryFeeDivisorUpdated(\\r\\n            self.newRedemptionTreasuryFeeDivisor\\r\\n        );\\r\\n\\r\\n        self.newRedemptionTreasuryFeeDivisor = 0;\\r\\n        self.redemptionTreasuryFeeDivisorChangeInitiated = 0;\\r\\n    }\\r\\n\\r\\n    /// @notice Begins the redemption tx max fee amount update process.\\r\\n    /// @param _newRedemptionTxMaxFee New redemption tx max fee amount.\\r\\n    function beginRedemptionTxMaxFeeUpdate(\\r\\n        RedemptionData storage self,\\r\\n        uint64 _newRedemptionTxMaxFee\\r\\n    ) external {\\r\\n        /* solhint-disable not-rely-on-time */\\r\\n        self.newRedemptionTxMaxFee = _newRedemptionTxMaxFee;\\r\\n        self.redemptionTxMaxFeeChangeInitiated = block.timestamp;\\r\\n        emit RedemptionTxMaxFeeUpdateStarted(\\r\\n            _newRedemptionTxMaxFee,\\r\\n            block.timestamp\\r\\n        );\\r\\n        /* solhint-enable not-rely-on-time */\\r\\n    }\\r\\n\\r\\n    /// @notice Finalizes the redemption tx max fee amount update process.\\r\\n    /// @dev Can be called after the governance delay elapses.\\r\\n    function finalizeRedemptionTxMaxFeeUpdate(\\r\\n        RedemptionData storage self,\\r\\n        uint256 governanceDelay\\r\\n    )\\r\\n        external\\r\\n        onlyAfterGovernanceDelay(\\r\\n            self.redemptionTxMaxFeeChangeInitiated,\\r\\n            governanceDelay\\r\\n        )\\r\\n    {\\r\\n        emit RedemptionTxMaxFeeUpdated(self.newRedemptionTxMaxFee);\\r\\n\\r\\n        self.newRedemptionTxMaxFee = 0;\\r\\n        self.redemptionTxMaxFeeChangeInitiated = 0;\\r\\n    }\\r\\n\\r\\n    /// @notice Begins the redemption tx max total fee amount update process.\\r\\n    /// @param _newRedemptionTxMaxTotalFee New redemption tx max total fee amount.\\r\\n    function beginRedemptionTxMaxTotalFeeUpdate(\\r\\n        RedemptionData storage self,\\r\\n        uint64 _newRedemptionTxMaxTotalFee\\r\\n    ) external {\\r\\n        /* solhint-disable not-rely-on-time */\\r\\n        self.newRedemptionTxMaxTotalFee = _newRedemptionTxMaxTotalFee;\\r\\n        self.redemptionTxMaxTotalFeeChangeInitiated = block.timestamp;\\r\\n        emit RedemptionTxMaxTotalFeeUpdateStarted(\\r\\n            _newRedemptionTxMaxTotalFee,\\r\\n            block.timestamp\\r\\n        );\\r\\n        /* solhint-enable not-rely-on-time */\\r\\n    }\\r\\n\\r\\n    /// @notice Finalizes the redemption tx max total fee amount update process.\\r\\n    /// @dev Can be called after the governance delay elapses.\\r\\n    function finalizeRedemptionTxMaxTotalFeeUpdate(\\r\\n        RedemptionData storage self,\\r\\n        uint256 governanceDelay\\r\\n    )\\r\\n        external\\r\\n        onlyAfterGovernanceDelay(\\r\\n            self.redemptionTxMaxTotalFeeChangeInitiated,\\r\\n            governanceDelay\\r\\n        )\\r\\n    {\\r\\n        emit RedemptionTxMaxTotalFeeUpdated(self.newRedemptionTxMaxTotalFee);\\r\\n\\r\\n        self.newRedemptionTxMaxTotalFee = 0;\\r\\n        self.redemptionTxMaxTotalFeeChangeInitiated = 0;\\r\\n    }\\r\\n\\r\\n    /// @notice Begins the redemption timeout amount update process.\\r\\n    /// @param _newRedemptionTimeout New redemption timeout amount.\\r\\n    function beginRedemptionTimeoutUpdate(\\r\\n        RedemptionData storage self,\\r\\n        uint32 _newRedemptionTimeout\\r\\n    ) external {\\r\\n        /* solhint-disable not-rely-on-time */\\r\\n        self.newRedemptionTimeout = _newRedemptionTimeout;\\r\\n        self.redemptionTimeoutChangeInitiated = block.timestamp;\\r\\n        emit RedemptionTimeoutUpdateStarted(\\r\\n            _newRedemptionTimeout,\\r\\n            block.timestamp\\r\\n        );\\r\\n        /* solhint-enable not-rely-on-time */\\r\\n    }\\r\\n\\r\\n    /// @notice Finalizes the redemption timeout amount update\\r\\n    ///         process.\\r\\n    /// @dev Can be called after the governance delay elapses.\\r\\n    function finalizeRedemptionTimeoutUpdate(\\r\\n        RedemptionData storage self,\\r\\n        uint256 governanceDelay\\r\\n    )\\r\\n        external\\r\\n        onlyAfterGovernanceDelay(\\r\\n            self.redemptionTimeoutChangeInitiated,\\r\\n            governanceDelay\\r\\n        )\\r\\n    {\\r\\n        emit RedemptionTimeoutUpdated(self.newRedemptionTimeout);\\r\\n\\r\\n        self.newRedemptionTimeout = 0;\\r\\n        self.redemptionTimeoutChangeInitiated = 0;\\r\\n    }\\r\\n\\r\\n    /// @notice Begins the redemption timeout slashing amount update process.\\r\\n    /// @param _newRedemptionTimeoutSlashingAmount New redemption timeout slashing\\r\\n    ///         amount.\\r\\n    function beginRedemptionTimeoutSlashingAmountUpdate(\\r\\n        RedemptionData storage self,\\r\\n        uint96 _newRedemptionTimeoutSlashingAmount\\r\\n    ) external {\\r\\n        /* solhint-disable not-rely-on-time */\\r\\n        self\\r\\n            .newRedemptionTimeoutSlashingAmount = _newRedemptionTimeoutSlashingAmount;\\r\\n        self.redemptionTimeoutSlashingAmountChangeInitiated = block.timestamp;\\r\\n        emit RedemptionTimeoutSlashingAmountUpdateStarted(\\r\\n            _newRedemptionTimeoutSlashingAmount,\\r\\n            block.timestamp\\r\\n        );\\r\\n        /* solhint-enable not-rely-on-time */\\r\\n    }\\r\\n\\r\\n    /// @notice Finalizes the redemption timeout slashing amount update process.\\r\\n    /// @dev Can be called after the governance delay elapses.\\r\\n    function finalizeRedemptionTimeoutSlashingAmountUpdate(\\r\\n        RedemptionData storage self,\\r\\n        uint256 governanceDelay\\r\\n    )\\r\\n        external\\r\\n        onlyAfterGovernanceDelay(\\r\\n            self.redemptionTimeoutSlashingAmountChangeInitiated,\\r\\n            governanceDelay\\r\\n        )\\r\\n    {\\r\\n        emit RedemptionTimeoutSlashingAmountUpdated(\\r\\n            self.newRedemptionTimeoutSlashingAmount\\r\\n        );\\r\\n\\r\\n        self.newRedemptionTimeoutSlashingAmount = 0;\\r\\n        self.redemptionTimeoutSlashingAmountChangeInitiated = 0;\\r\\n    }\\r\\n\\r\\n    /// @notice Begins the redemption timeout notifier reward multiplier amount\\r\\n    ///         update process.\\r\\n    /// @param _newRedemptionTimeoutNotifierRewardMultiplier New redemption\\r\\n    ///         timeout notifier reward multiplier amount.\\r\\n    function beginRedemptionTimeoutNotifierRewardMultiplierUpdate(\\r\\n        RedemptionData storage self,\\r\\n        uint32 _newRedemptionTimeoutNotifierRewardMultiplier\\r\\n    ) external {\\r\\n        /* solhint-disable not-rely-on-time */\\r\\n        self\\r\\n            .newRedemptionTimeoutNotifierRewardMultiplier = _newRedemptionTimeoutNotifierRewardMultiplier;\\r\\n        self.redemptionTimeoutNotifierRewardMultiplierChangeInitiated = block\\r\\n            .timestamp;\\r\\n        emit RedemptionTimeoutNotifierRewardMultiplierUpdateStarted(\\r\\n            _newRedemptionTimeoutNotifierRewardMultiplier,\\r\\n            block.timestamp\\r\\n        );\\r\\n        /* solhint-enable not-rely-on-time */\\r\\n    }\\r\\n\\r\\n    /// @notice Finalizes the redemption timeout notifier reward multiplier amount update process.\\r\\n    /// @dev Can be called after the governance delay elapses.\\r\\n    function finalizeRedemptionTimeoutNotifierRewardMultiplierUpdate(\\r\\n        RedemptionData storage self,\\r\\n        uint256 governanceDelay\\r\\n    )\\r\\n        external\\r\\n        onlyAfterGovernanceDelay(\\r\\n            self.redemptionTimeoutNotifierRewardMultiplierChangeInitiated,\\r\\n            governanceDelay\\r\\n        )\\r\\n    {\\r\\n        emit RedemptionTimeoutNotifierRewardMultiplierUpdated(\\r\\n            self.newRedemptionTimeoutNotifierRewardMultiplier\\r\\n        );\\r\\n\\r\\n        self.newRedemptionTimeoutNotifierRewardMultiplier = 0;\\r\\n        self.redemptionTimeoutNotifierRewardMultiplierChangeInitiated = 0;\\r\\n    }\\r\\n\\r\\n    // --- Moving funds\\r\\n\\r\\n    /// @notice Begins the moving funds tx max total fee amount update process.\\r\\n    /// @param _newMovingFundsTxMaxTotalFee New moving funds tx max total fee amount.\\r\\n    function beginMovingFundsTxMaxTotalFeeUpdate(\\r\\n        MovingFundsData storage self,\\r\\n        uint64 _newMovingFundsTxMaxTotalFee\\r\\n    ) external {\\r\\n        /* solhint-disable not-rely-on-time */\\r\\n        self.newMovingFundsTxMaxTotalFee = _newMovingFundsTxMaxTotalFee;\\r\\n        self.movingFundsTxMaxTotalFeeChangeInitiated = block.timestamp;\\r\\n        emit MovingFundsTxMaxTotalFeeUpdateStarted(\\r\\n            _newMovingFundsTxMaxTotalFee,\\r\\n            block.timestamp\\r\\n        );\\r\\n        /* solhint-enable not-rely-on-time */\\r\\n    }\\r\\n\\r\\n    /// @notice Finalizes the moving funds tx max total fee amount update process.\\r\\n    /// @dev Can be called after the governance delay elapses.\\r\\n    function finalizeMovingFundsTxMaxTotalFeeUpdate(\\r\\n        MovingFundsData storage self,\\r\\n        uint256 governanceDelay\\r\\n    )\\r\\n        external\\r\\n        onlyAfterGovernanceDelay(\\r\\n            self.movingFundsTxMaxTotalFeeChangeInitiated,\\r\\n            governanceDelay\\r\\n        )\\r\\n    {\\r\\n        emit MovingFundsTxMaxTotalFeeUpdated(self.newMovingFundsTxMaxTotalFee);\\r\\n\\r\\n        self.newMovingFundsTxMaxTotalFee = 0;\\r\\n        self.movingFundsTxMaxTotalFeeChangeInitiated = 0;\\r\\n    }\\r\\n\\r\\n    /// @notice Begins the moving funds dust threshold amount update process.\\r\\n    /// @param _newMovingFundsDustThreshold New moving funds dust threshold amount.\\r\\n    function beginMovingFundsDustThresholdUpdate(\\r\\n        MovingFundsData storage self,\\r\\n        uint64 _newMovingFundsDustThreshold\\r\\n    ) external {\\r\\n        /* solhint-disable not-rely-on-time */\\r\\n        self.newMovingFundsDustThreshold = _newMovingFundsDustThreshold;\\r\\n        self.movingFundsDustThresholdChangeInitiated = block.timestamp;\\r\\n        emit MovingFundsDustThresholdUpdateStarted(\\r\\n            _newMovingFundsDustThreshold,\\r\\n            block.timestamp\\r\\n        );\\r\\n        /* solhint-enable not-rely-on-time */\\r\\n    }\\r\\n\\r\\n    /// @notice Finalizes the moving funds dust threshold amount update process.\\r\\n    /// @dev Can be called after the governance delay elapses.\\r\\n    function finalizeMovingFundsDustThresholdUpdate(\\r\\n        MovingFundsData storage self,\\r\\n        uint256 governanceDelay\\r\\n    )\\r\\n        external\\r\\n        onlyAfterGovernanceDelay(\\r\\n            self.movingFundsDustThresholdChangeInitiated,\\r\\n            governanceDelay\\r\\n        )\\r\\n    {\\r\\n        emit MovingFundsDustThresholdUpdated(self.newMovingFundsDustThreshold);\\r\\n\\r\\n        self.newMovingFundsDustThreshold = 0;\\r\\n        self.movingFundsDustThresholdChangeInitiated = 0;\\r\\n    }\\r\\n\\r\\n    /// @notice Begins the moving funds timeout reset delay amount update process.\\r\\n    /// @param _newMovingFundsTimeoutResetDelay New moving funds timeout reset\\r\\n    ///         delay amount.\\r\\n    function beginMovingFundsTimeoutResetDelayUpdate(\\r\\n        MovingFundsData storage self,\\r\\n        uint32 _newMovingFundsTimeoutResetDelay\\r\\n    ) external {\\r\\n        /* solhint-disable not-rely-on-time */\\r\\n        self.newMovingFundsTimeoutResetDelay = _newMovingFundsTimeoutResetDelay;\\r\\n        self.movingFundsTimeoutResetDelayChangeInitiated = block.timestamp;\\r\\n        emit MovingFundsTimeoutResetDelayUpdateStarted(\\r\\n            _newMovingFundsTimeoutResetDelay,\\r\\n            block.timestamp\\r\\n        );\\r\\n        /* solhint-enable not-rely-on-time */\\r\\n    }\\r\\n\\r\\n    /// @notice Finalizes the moving funds timeout reset delay amount update process.\\r\\n    /// @dev Can be called after the governance delay elapses.\\r\\n    function finalizeMovingFundsTimeoutResetDelayUpdate(\\r\\n        MovingFundsData storage self,\\r\\n        uint256 governanceDelay\\r\\n    )\\r\\n        external\\r\\n        onlyAfterGovernanceDelay(\\r\\n            self.movingFundsTimeoutResetDelayChangeInitiated,\\r\\n            governanceDelay\\r\\n        )\\r\\n    {\\r\\n        emit MovingFundsTimeoutResetDelayUpdated(\\r\\n            self.newMovingFundsTimeoutResetDelay\\r\\n        );\\r\\n\\r\\n        self.newMovingFundsTimeoutResetDelay = 0;\\r\\n        self.movingFundsTimeoutResetDelayChangeInitiated = 0;\\r\\n    }\\r\\n\\r\\n    /// @notice Begins the moving funds timeout amount update process.\\r\\n    /// @param _newMovingFundsTimeout New moving funds timeout amount.\\r\\n    function beginMovingFundsTimeoutUpdate(\\r\\n        MovingFundsData storage self,\\r\\n        uint32 _newMovingFundsTimeout\\r\\n    ) external {\\r\\n        /* solhint-disable not-rely-on-time */\\r\\n        self.newMovingFundsTimeout = _newMovingFundsTimeout;\\r\\n        self.movingFundsTimeoutChangeInitiated = block.timestamp;\\r\\n        emit MovingFundsTimeoutUpdateStarted(\\r\\n            _newMovingFundsTimeout,\\r\\n            block.timestamp\\r\\n        );\\r\\n        /* solhint-enable not-rely-on-time */\\r\\n    }\\r\\n\\r\\n    /// @notice Finalizes the moving funds timeout amount update process.\\r\\n    /// @dev Can be called after the governance delay elapses.\\r\\n    function finalizeMovingFundsTimeoutUpdate(\\r\\n        MovingFundsData storage self,\\r\\n        uint256 governanceDelay\\r\\n    )\\r\\n        external\\r\\n        onlyAfterGovernanceDelay(\\r\\n            self.movingFundsTimeoutChangeInitiated,\\r\\n            governanceDelay\\r\\n        )\\r\\n    {\\r\\n        emit MovingFundsTimeoutUpdated(self.newMovingFundsTimeout);\\r\\n\\r\\n        self.newMovingFundsTimeout = 0;\\r\\n        self.movingFundsTimeoutChangeInitiated = 0;\\r\\n    }\\r\\n\\r\\n    /// @notice Begins the moving funds timeout slashing amount update process.\\r\\n    /// @param _newMovingFundsTimeoutSlashingAmount New moving funds timeout slashing amount.\\r\\n    function beginMovingFundsTimeoutSlashingAmountUpdate(\\r\\n        MovingFundsData storage self,\\r\\n        uint96 _newMovingFundsTimeoutSlashingAmount\\r\\n    ) external {\\r\\n        /* solhint-disable not-rely-on-time */\\r\\n        self\\r\\n            .newMovingFundsTimeoutSlashingAmount = _newMovingFundsTimeoutSlashingAmount;\\r\\n        self.movingFundsTimeoutSlashingAmountChangeInitiated = block.timestamp;\\r\\n        emit MovingFundsTimeoutSlashingAmountUpdateStarted(\\r\\n            _newMovingFundsTimeoutSlashingAmount,\\r\\n            block.timestamp\\r\\n        );\\r\\n        /* solhint-enable not-rely-on-time */\\r\\n    }\\r\\n\\r\\n    /// @notice Finalizes the moving funds timeout slashing amount update process.\\r\\n    /// @dev Can be called after the governance delay elapses.\\r\\n    function finalizeMovingFundsTimeoutSlashingAmountUpdate(\\r\\n        MovingFundsData storage self,\\r\\n        uint256 governanceDelay\\r\\n    )\\r\\n        external\\r\\n        onlyAfterGovernanceDelay(\\r\\n            self.movingFundsTimeoutSlashingAmountChangeInitiated,\\r\\n            governanceDelay\\r\\n        )\\r\\n    {\\r\\n        emit MovingFundsTimeoutSlashingAmountUpdated(\\r\\n            self.newMovingFundsTimeoutSlashingAmount\\r\\n        );\\r\\n\\r\\n        self.newMovingFundsTimeoutSlashingAmount = 0;\\r\\n        self.movingFundsTimeoutSlashingAmountChangeInitiated = 0;\\r\\n    }\\r\\n\\r\\n    /// @notice Begins the moving funds timeout notifier reward multiplier amount\\r\\n    ///         update process.\\r\\n    /// @param _newMovingFundsTimeoutNotifierRewardMultiplier New moving funds\\r\\n    ///         timeout notifier reward multiplier amount.\\r\\n    function beginMovingFundsTimeoutNotifierRewardMultiplierUpdate(\\r\\n        MovingFundsData storage self,\\r\\n        uint32 _newMovingFundsTimeoutNotifierRewardMultiplier\\r\\n    ) external {\\r\\n        /* solhint-disable not-rely-on-time */\\r\\n        self\\r\\n            .newMovingFundsTimeoutNotifierRewardMultiplier = _newMovingFundsTimeoutNotifierRewardMultiplier;\\r\\n        self.movingFundsTimeoutNotifierRewardMultiplierChangeInitiated = block\\r\\n            .timestamp;\\r\\n        emit MovingFundsTimeoutNotifierRewardMultiplierUpdateStarted(\\r\\n            _newMovingFundsTimeoutNotifierRewardMultiplier,\\r\\n            block.timestamp\\r\\n        );\\r\\n        /* solhint-enable not-rely-on-time */\\r\\n    }\\r\\n\\r\\n    /// @notice Finalizes the moving funds timeout notifier reward multiplier\\r\\n    ///         amount update process.\\r\\n    /// @dev Can be called after the governance delay elapses.\\r\\n    function finalizeMovingFundsTimeoutNotifierRewardMultiplierUpdate(\\r\\n        MovingFundsData storage self,\\r\\n        uint256 governanceDelay\\r\\n    )\\r\\n        external\\r\\n        onlyAfterGovernanceDelay(\\r\\n            self.movingFundsTimeoutNotifierRewardMultiplierChangeInitiated,\\r\\n            governanceDelay\\r\\n        )\\r\\n    {\\r\\n        emit MovingFundsTimeoutNotifierRewardMultiplierUpdated(\\r\\n            self.newMovingFundsTimeoutNotifierRewardMultiplier\\r\\n        );\\r\\n\\r\\n        self.newMovingFundsTimeoutNotifierRewardMultiplier = 0;\\r\\n        self.movingFundsTimeoutNotifierRewardMultiplierChangeInitiated = 0;\\r\\n    }\\r\\n\\r\\n    /// @notice Begins the moving funds commitment gas offset update process.\\r\\n    /// @param _newMovingFundsCommitmentGasOffset New moving funds commitment\\r\\n    ///        gas offset.\\r\\n    function beginMovingFundsCommitmentGasOffsetUpdate(\\r\\n        MovingFundsData storage self,\\r\\n        uint16 _newMovingFundsCommitmentGasOffset\\r\\n    ) external {\\r\\n        /* solhint-disable not-rely-on-time */\\r\\n        self\\r\\n            .newMovingFundsCommitmentGasOffset = _newMovingFundsCommitmentGasOffset;\\r\\n        self.movingFundsCommitmentGasOffsetChangeInitiated = block.timestamp;\\r\\n        emit MovingFundsCommitmentGasOffsetUpdateStarted(\\r\\n            _newMovingFundsCommitmentGasOffset,\\r\\n            block.timestamp\\r\\n        );\\r\\n        /* solhint-enable not-rely-on-time */\\r\\n    }\\r\\n\\r\\n    /// @notice Finalizes the moving funds commitment gas offset update process.\\r\\n    /// @dev Can be called after the governance delay elapses.\\r\\n    function finalizeMovingFundsCommitmentGasOffsetUpdate(\\r\\n        MovingFundsData storage self,\\r\\n        uint256 governanceDelay\\r\\n    )\\r\\n        external\\r\\n        onlyAfterGovernanceDelay(\\r\\n            self.movingFundsCommitmentGasOffsetChangeInitiated,\\r\\n            governanceDelay\\r\\n        )\\r\\n    {\\r\\n        emit MovingFundsCommitmentGasOffsetUpdated(\\r\\n            self.newMovingFundsCommitmentGasOffset\\r\\n        );\\r\\n\\r\\n        self.newMovingFundsCommitmentGasOffset = 0;\\r\\n        self.movingFundsCommitmentGasOffsetChangeInitiated = 0;\\r\\n    }\\r\\n\\r\\n    /// @notice Begins the moved funds sweep tx max total fee amount update process.\\r\\n    /// @param _newMovedFundsSweepTxMaxTotalFee New moved funds sweep tx max total\\r\\n    ///         fee amount.\\r\\n    function beginMovedFundsSweepTxMaxTotalFeeUpdate(\\r\\n        MovingFundsData storage self,\\r\\n        uint64 _newMovedFundsSweepTxMaxTotalFee\\r\\n    ) external {\\r\\n        /* solhint-disable not-rely-on-time */\\r\\n        self.newMovedFundsSweepTxMaxTotalFee = _newMovedFundsSweepTxMaxTotalFee;\\r\\n        self.movedFundsSweepTxMaxTotalFeeChangeInitiated = block.timestamp;\\r\\n        emit MovedFundsSweepTxMaxTotalFeeUpdateStarted(\\r\\n            _newMovedFundsSweepTxMaxTotalFee,\\r\\n            block.timestamp\\r\\n        );\\r\\n        /* solhint-enable not-rely-on-time */\\r\\n    }\\r\\n\\r\\n    /// @notice Finalizes the moved funds sweep tx max total fee amount update\\r\\n    ///         process.\\r\\n    /// @dev Can be called after the governance delay elapses.\\r\\n    function finalizeMovedFundsSweepTxMaxTotalFeeUpdate(\\r\\n        MovingFundsData storage self,\\r\\n        uint256 governanceDelay\\r\\n    )\\r\\n        external\\r\\n        onlyAfterGovernanceDelay(\\r\\n            self.movedFundsSweepTxMaxTotalFeeChangeInitiated,\\r\\n            governanceDelay\\r\\n        )\\r\\n    {\\r\\n        emit MovedFundsSweepTxMaxTotalFeeUpdated(\\r\\n            self.newMovedFundsSweepTxMaxTotalFee\\r\\n        );\\r\\n\\r\\n        self.newMovedFundsSweepTxMaxTotalFee = 0;\\r\\n        self.movedFundsSweepTxMaxTotalFeeChangeInitiated = 0;\\r\\n    }\\r\\n\\r\\n    /// @notice Begins the moved funds sweep timeout amount update process.\\r\\n    /// @param _newMovedFundsSweepTimeout New moved funds sweep timeout amount.\\r\\n    function beginMovedFundsSweepTimeoutUpdate(\\r\\n        MovingFundsData storage self,\\r\\n        uint32 _newMovedFundsSweepTimeout\\r\\n    ) external {\\r\\n        /* solhint-disable not-rely-on-time */\\r\\n        self.newMovedFundsSweepTimeout = _newMovedFundsSweepTimeout;\\r\\n        self.movedFundsSweepTimeoutChangeInitiated = block.timestamp;\\r\\n        emit MovedFundsSweepTimeoutUpdateStarted(\\r\\n            _newMovedFundsSweepTimeout,\\r\\n            block.timestamp\\r\\n        );\\r\\n        /* solhint-enable not-rely-on-time */\\r\\n    }\\r\\n\\r\\n    /// @notice Finalizes the moved funds sweep timeout amount update process.\\r\\n    /// @dev Can be called after the governance delay elapses.\\r\\n    function finalizeMovedFundsSweepTimeoutUpdate(\\r\\n        MovingFundsData storage self,\\r\\n        uint256 governanceDelay\\r\\n    )\\r\\n        external\\r\\n        onlyAfterGovernanceDelay(\\r\\n            self.movedFundsSweepTimeoutChangeInitiated,\\r\\n            governanceDelay\\r\\n        )\\r\\n    {\\r\\n        emit MovedFundsSweepTimeoutUpdated(self.newMovedFundsSweepTimeout);\\r\\n\\r\\n        self.newMovedFundsSweepTimeout = 0;\\r\\n        self.movedFundsSweepTimeoutChangeInitiated = 0;\\r\\n    }\\r\\n\\r\\n    /// @notice Begins the moved funds sweep timeout slashing amount update\\r\\n    ///         process.\\r\\n    /// @param _newMovedFundsSweepTimeoutSlashingAmount New moved funds sweep\\r\\n    ///         timeout slashing amount.\\r\\n    function beginMovedFundsSweepTimeoutSlashingAmountUpdate(\\r\\n        MovingFundsData storage self,\\r\\n        uint96 _newMovedFundsSweepTimeoutSlashingAmount\\r\\n    ) external {\\r\\n        /* solhint-disable not-rely-on-time */\\r\\n        self\\r\\n            .newMovedFundsSweepTimeoutSlashingAmount = _newMovedFundsSweepTimeoutSlashingAmount;\\r\\n        self.movedFundsSweepTimeoutSlashingAmountChangeInitiated = block\\r\\n            .timestamp;\\r\\n        emit MovedFundsSweepTimeoutSlashingAmountUpdateStarted(\\r\\n            _newMovedFundsSweepTimeoutSlashingAmount,\\r\\n            block.timestamp\\r\\n        );\\r\\n        /* solhint-enable not-rely-on-time */\\r\\n    }\\r\\n\\r\\n    /// @notice Finalizes the moved funds sweep timeout slashing amount\\r\\n    ///         update process.\\r\\n    /// @dev Can be called after the governance delay elapses.\\r\\n    function finalizeMovedFundsSweepTimeoutSlashingAmountUpdate(\\r\\n        MovingFundsData storage self,\\r\\n        uint256 governanceDelay\\r\\n    )\\r\\n        external\\r\\n        onlyAfterGovernanceDelay(\\r\\n            self.movedFundsSweepTimeoutSlashingAmountChangeInitiated,\\r\\n            governanceDelay\\r\\n        )\\r\\n    {\\r\\n        emit MovedFundsSweepTimeoutSlashingAmountUpdated(\\r\\n            self.newMovedFundsSweepTimeoutSlashingAmount\\r\\n        );\\r\\n\\r\\n        self.newMovedFundsSweepTimeoutSlashingAmount = 0;\\r\\n        self.movedFundsSweepTimeoutSlashingAmountChangeInitiated = 0;\\r\\n    }\\r\\n\\r\\n    /// @notice Begins the moved funds sweep timeout notifier reward multiplier\\r\\n    ///         amount update process.\\r\\n    /// @param _newMovedFundsSweepTimeoutNotifierRewardMultiplier New moved funds\\r\\n    ///         sweep timeout notifier reward multiplier amount.\\r\\n    function beginMovedFundsSweepTimeoutNotifierRewardMultiplierUpdate(\\r\\n        MovingFundsData storage self,\\r\\n        uint32 _newMovedFundsSweepTimeoutNotifierRewardMultiplier\\r\\n    ) external {\\r\\n        /* solhint-disable not-rely-on-time */\\r\\n        self\\r\\n            .newMovedFundsSweepTimeoutNotifierRewardMultiplier = _newMovedFundsSweepTimeoutNotifierRewardMultiplier;\\r\\n        self\\r\\n            .movedFundsSweepTimeoutNotifierRewardMultiplierChangeInitiated = block\\r\\n            .timestamp;\\r\\n        emit MovedFundsSweepTimeoutNotifierRewardMultiplierUpdateStarted(\\r\\n            _newMovedFundsSweepTimeoutNotifierRewardMultiplier,\\r\\n            block.timestamp\\r\\n        );\\r\\n        /* solhint-enable not-rely-on-time */\\r\\n    }\\r\\n\\r\\n    /// @notice Finalizes the moved funds sweep timeout notifier reward multiplier\\r\\n    ///         amount update process.\\r\\n    /// @dev Can be called after the governance delay elapses.\\r\\n    function finalizeMovedFundsSweepTimeoutNotifierRewardMultiplierUpdate(\\r\\n        MovingFundsData storage self,\\r\\n        uint256 governanceDelay\\r\\n    )\\r\\n        external\\r\\n        onlyAfterGovernanceDelay(\\r\\n            self.movedFundsSweepTimeoutNotifierRewardMultiplierChangeInitiated,\\r\\n            governanceDelay\\r\\n        )\\r\\n    {\\r\\n        emit MovedFundsSweepTimeoutNotifierRewardMultiplierUpdated(\\r\\n            self.newMovedFundsSweepTimeoutNotifierRewardMultiplier\\r\\n        );\\r\\n\\r\\n        self.newMovedFundsSweepTimeoutNotifierRewardMultiplier = 0;\\r\\n        self.movedFundsSweepTimeoutNotifierRewardMultiplierChangeInitiated = 0;\\r\\n    }\\r\\n\\r\\n    // --- Wallet params\\r\\n\\r\\n    /// @notice Begins the wallet creation period amount update process.\\r\\n    /// @param _newWalletCreationPeriod New wallet creation period amount.\\r\\n    function beginWalletCreationPeriodUpdate(\\r\\n        WalletData storage self,\\r\\n        uint32 _newWalletCreationPeriod\\r\\n    ) external {\\r\\n        /* solhint-disable not-rely-on-time */\\r\\n        self.newWalletCreationPeriod = _newWalletCreationPeriod;\\r\\n        self.walletCreationPeriodChangeInitiated = block.timestamp;\\r\\n        emit WalletCreationPeriodUpdateStarted(\\r\\n            _newWalletCreationPeriod,\\r\\n            block.timestamp\\r\\n        );\\r\\n        /* solhint-enable not-rely-on-time */\\r\\n    }\\r\\n\\r\\n    /// @notice Finalizes the wallet creation period amount update process.\\r\\n    /// @dev Can be called after the governance delay elapses.\\r\\n    function finalizeWalletCreationPeriodUpdate(\\r\\n        WalletData storage self,\\r\\n        uint256 governanceDelay\\r\\n    )\\r\\n        external\\r\\n        onlyAfterGovernanceDelay(\\r\\n            self.walletCreationPeriodChangeInitiated,\\r\\n            governanceDelay\\r\\n        )\\r\\n    {\\r\\n        emit WalletCreationPeriodUpdated(self.newWalletCreationPeriod);\\r\\n\\r\\n        self.newWalletCreationPeriod = 0;\\r\\n        self.walletCreationPeriodChangeInitiated = 0;\\r\\n    }\\r\\n\\r\\n    /// @notice Begins the wallet creation min btc balance amount update process.\\r\\n    /// @param _newWalletCreationMinBtcBalance New wallet creation min btc balance\\r\\n    ///         amount.\\r\\n    function beginWalletCreationMinBtcBalanceUpdate(\\r\\n        WalletData storage self,\\r\\n        uint64 _newWalletCreationMinBtcBalance\\r\\n    ) external {\\r\\n        /* solhint-disable not-rely-on-time */\\r\\n        self.newWalletCreationMinBtcBalance = _newWalletCreationMinBtcBalance;\\r\\n        self.walletCreationMinBtcBalanceChangeInitiated = block.timestamp;\\r\\n        emit WalletCreationMinBtcBalanceUpdateStarted(\\r\\n            _newWalletCreationMinBtcBalance,\\r\\n            block.timestamp\\r\\n        );\\r\\n        /* solhint-enable not-rely-on-time */\\r\\n    }\\r\\n\\r\\n    /// @notice Finalizes the wallet creation min btc balance amount update process.\\r\\n    /// @dev Can be called after the governance delay elapses.\\r\\n    function finalizeWalletCreationMinBtcBalanceUpdate(\\r\\n        WalletData storage self,\\r\\n        uint256 governanceDelay\\r\\n    )\\r\\n        external\\r\\n        onlyAfterGovernanceDelay(\\r\\n            self.walletCreationMinBtcBalanceChangeInitiated,\\r\\n            governanceDelay\\r\\n        )\\r\\n    {\\r\\n        emit WalletCreationMinBtcBalanceUpdated(\\r\\n            self.newWalletCreationMinBtcBalance\\r\\n        );\\r\\n\\r\\n        self.newWalletCreationMinBtcBalance = 0;\\r\\n        self.walletCreationMinBtcBalanceChangeInitiated = 0;\\r\\n    }\\r\\n\\r\\n    /// @notice Begins the wallet creation max btc balance amount update process.\\r\\n    /// @param _newWalletCreationMaxBtcBalance New wallet creation max btc balance\\r\\n    ///         amount.\\r\\n    function beginWalletCreationMaxBtcBalanceUpdate(\\r\\n        WalletData storage self,\\r\\n        uint64 _newWalletCreationMaxBtcBalance\\r\\n    ) external {\\r\\n        /* solhint-disable not-rely-on-time */\\r\\n        self.newWalletCreationMaxBtcBalance = _newWalletCreationMaxBtcBalance;\\r\\n        self.walletCreationMaxBtcBalanceChangeInitiated = block.timestamp;\\r\\n        emit WalletCreationMaxBtcBalanceUpdateStarted(\\r\\n            _newWalletCreationMaxBtcBalance,\\r\\n            block.timestamp\\r\\n        );\\r\\n        /* solhint-enable not-rely-on-time */\\r\\n    }\\r\\n\\r\\n    /// @notice Finalizes the wallet creation max btc balance amount update process.\\r\\n    /// @dev Can be called after the governance delay elapses.\\r\\n    function finalizeWalletCreationMaxBtcBalanceUpdate(\\r\\n        WalletData storage self,\\r\\n        uint256 governanceDelay\\r\\n    )\\r\\n        external\\r\\n        onlyAfterGovernanceDelay(\\r\\n            self.walletCreationMaxBtcBalanceChangeInitiated,\\r\\n            governanceDelay\\r\\n        )\\r\\n    {\\r\\n        emit WalletCreationMaxBtcBalanceUpdated(\\r\\n            self.newWalletCreationMaxBtcBalance\\r\\n        );\\r\\n\\r\\n        self.newWalletCreationMaxBtcBalance = 0;\\r\\n        self.walletCreationMaxBtcBalanceChangeInitiated = 0;\\r\\n    }\\r\\n\\r\\n    /// @notice Begins the wallet closure min btc balance amount update process.\\r\\n    /// @param _newWalletClosureMinBtcBalance New wallet closure min btc balance amount.\\r\\n    function beginWalletClosureMinBtcBalanceUpdate(\\r\\n        WalletData storage self,\\r\\n        uint64 _newWalletClosureMinBtcBalance\\r\\n    ) external {\\r\\n        /* solhint-disable not-rely-on-time */\\r\\n        self.newWalletClosureMinBtcBalance = _newWalletClosureMinBtcBalance;\\r\\n        self.walletClosureMinBtcBalanceChangeInitiated = block.timestamp;\\r\\n        emit WalletClosureMinBtcBalanceUpdateStarted(\\r\\n            _newWalletClosureMinBtcBalance,\\r\\n            block.timestamp\\r\\n        );\\r\\n        /* solhint-enable not-rely-on-time */\\r\\n    }\\r\\n\\r\\n    /// @notice Finalizes the wallet closure min btc balance amount update process.\\r\\n    /// @dev Can be called after the governance delay elapses.\\r\\n    function finalizeWalletClosureMinBtcBalanceUpdate(\\r\\n        WalletData storage self,\\r\\n        uint256 governanceDelay\\r\\n    )\\r\\n        external\\r\\n        onlyAfterGovernanceDelay(\\r\\n            self.walletClosureMinBtcBalanceChangeInitiated,\\r\\n            governanceDelay\\r\\n        )\\r\\n    {\\r\\n        emit WalletClosureMinBtcBalanceUpdated(\\r\\n            self.newWalletClosureMinBtcBalance\\r\\n        );\\r\\n\\r\\n        self.newWalletClosureMinBtcBalance = 0;\\r\\n        self.walletClosureMinBtcBalanceChangeInitiated = 0;\\r\\n    }\\r\\n\\r\\n    /// @notice Begins the wallet max age amount update process.\\r\\n    /// @param _newWalletMaxAge New wallet max age amount.\\r\\n    function beginWalletMaxAgeUpdate(\\r\\n        WalletData storage self,\\r\\n        uint32 _newWalletMaxAge\\r\\n    ) external {\\r\\n        /* solhint-disable not-rely-on-time */\\r\\n        self.newWalletMaxAge = _newWalletMaxAge;\\r\\n        self.walletMaxAgeChangeInitiated = block.timestamp;\\r\\n        emit WalletMaxAgeUpdateStarted(_newWalletMaxAge, block.timestamp);\\r\\n        /* solhint-enable not-rely-on-time */\\r\\n    }\\r\\n\\r\\n    /// @notice Finalizes the wallet max age amount update process.\\r\\n    /// @dev Can be called after the governance delay elapses.\\r\\n    function finalizeWalletMaxAgeUpdate(\\r\\n        WalletData storage self,\\r\\n        uint256 governanceDelay\\r\\n    )\\r\\n        external\\r\\n        onlyAfterGovernanceDelay(\\r\\n            self.walletMaxAgeChangeInitiated,\\r\\n            governanceDelay\\r\\n        )\\r\\n    {\\r\\n        emit WalletMaxAgeUpdated(self.newWalletMaxAge);\\r\\n\\r\\n        self.newWalletMaxAge = 0;\\r\\n        self.walletMaxAgeChangeInitiated = 0;\\r\\n    }\\r\\n\\r\\n    /// @notice Begins the wallet max btc transfer amount update process.\\r\\n    /// @param _newWalletMaxBtcTransfer New wallet max btc transfer amount.\\r\\n    function beginWalletMaxBtcTransferUpdate(\\r\\n        WalletData storage self,\\r\\n        uint64 _newWalletMaxBtcTransfer\\r\\n    ) external {\\r\\n        /* solhint-disable not-rely-on-time */\\r\\n        self.newWalletMaxBtcTransfer = _newWalletMaxBtcTransfer;\\r\\n        self.walletMaxBtcTransferChangeInitiated = block.timestamp;\\r\\n        emit WalletMaxBtcTransferUpdateStarted(\\r\\n            _newWalletMaxBtcTransfer,\\r\\n            block.timestamp\\r\\n        );\\r\\n        /* solhint-enable not-rely-on-time */\\r\\n    }\\r\\n\\r\\n    /// @notice Finalizes the wallet max btc transfer amount update process.\\r\\n    /// @dev Can be called after the governance delay elapses.\\r\\n    function finalizeWalletMaxBtcTransferUpdate(\\r\\n        WalletData storage self,\\r\\n        uint256 governanceDelay\\r\\n    )\\r\\n        external\\r\\n        onlyAfterGovernanceDelay(\\r\\n            self.walletMaxBtcTransferChangeInitiated,\\r\\n            governanceDelay\\r\\n        )\\r\\n    {\\r\\n        emit WalletMaxBtcTransferUpdated(self.newWalletMaxBtcTransfer);\\r\\n\\r\\n        self.newWalletMaxBtcTransfer = 0;\\r\\n        self.walletMaxBtcTransferChangeInitiated = 0;\\r\\n    }\\r\\n\\r\\n    /// @notice Begins the wallet closing period amount update process.\\r\\n    /// @param _newWalletClosingPeriod New wallet closing period amount.\\r\\n    function beginWalletClosingPeriodUpdate(\\r\\n        WalletData storage self,\\r\\n        uint32 _newWalletClosingPeriod\\r\\n    ) external {\\r\\n        /* solhint-disable not-rely-on-time */\\r\\n        self.newWalletClosingPeriod = _newWalletClosingPeriod;\\r\\n        self.walletClosingPeriodChangeInitiated = block.timestamp;\\r\\n        emit WalletClosingPeriodUpdateStarted(\\r\\n            _newWalletClosingPeriod,\\r\\n            block.timestamp\\r\\n        );\\r\\n        /* solhint-enable not-rely-on-time */\\r\\n    }\\r\\n\\r\\n    /// @notice Finalizes the wallet closing period amount update process.\\r\\n    /// @dev Can be called after the governance delay elapses.\\r\\n    function finalizeWalletClosingPeriodUpdate(\\r\\n        WalletData storage self,\\r\\n        uint256 governanceDelay\\r\\n    )\\r\\n        external\\r\\n        onlyAfterGovernanceDelay(\\r\\n            self.walletClosingPeriodChangeInitiated,\\r\\n            governanceDelay\\r\\n        )\\r\\n    {\\r\\n        emit WalletClosingPeriodUpdated(self.newWalletClosingPeriod);\\r\\n\\r\\n        self.newWalletClosingPeriod = 0;\\r\\n        self.walletClosingPeriodChangeInitiated = 0;\\r\\n    }\\r\\n\\r\\n    // --- Fraud\\r\\n\\r\\n    /// @notice Begins the fraud challenge deposit amount update process.\\r\\n    /// @param _newFraudChallengeDepositAmount New fraud challenge deposit amount.\\r\\n    function beginFraudChallengeDepositAmountUpdate(\\r\\n        FraudData storage self,\\r\\n        uint96 _newFraudChallengeDepositAmount\\r\\n    ) external {\\r\\n        /* solhint-disable not-rely-on-time */\\r\\n        self.newFraudChallengeDepositAmount = _newFraudChallengeDepositAmount;\\r\\n        self.fraudChallengeDepositAmountChangeInitiated = block.timestamp;\\r\\n        emit FraudChallengeDepositAmountUpdateStarted(\\r\\n            _newFraudChallengeDepositAmount,\\r\\n            block.timestamp\\r\\n        );\\r\\n        /* solhint-enable not-rely-on-time */\\r\\n    }\\r\\n\\r\\n    /// @notice Finalizes the fraud challenge deposit amount update process.\\r\\n    /// @dev Can be called after the governance delay elapses.\\r\\n    function finalizeFraudChallengeDepositAmountUpdate(\\r\\n        FraudData storage self,\\r\\n        uint256 governanceDelay\\r\\n    )\\r\\n        external\\r\\n        onlyAfterGovernanceDelay(\\r\\n            self.fraudChallengeDepositAmountChangeInitiated,\\r\\n            governanceDelay\\r\\n        )\\r\\n    {\\r\\n        emit FraudChallengeDepositAmountUpdated(\\r\\n            self.newFraudChallengeDepositAmount\\r\\n        );\\r\\n\\r\\n        self.newFraudChallengeDepositAmount = 0;\\r\\n        self.fraudChallengeDepositAmountChangeInitiated = 0;\\r\\n    }\\r\\n\\r\\n    /// @notice Begins the fraud challenge defeat timeout amount update process.\\r\\n    /// @param _newFraudChallengeDefeatTimeout New fraud challenge defeat timeout\\r\\n    ///         amount.\\r\\n    function beginFraudChallengeDefeatTimeoutUpdate(\\r\\n        FraudData storage self,\\r\\n        uint32 _newFraudChallengeDefeatTimeout\\r\\n    ) external {\\r\\n        /* solhint-disable not-rely-on-time */\\r\\n        self.newFraudChallengeDefeatTimeout = _newFraudChallengeDefeatTimeout;\\r\\n        self.fraudChallengeDefeatTimeoutChangeInitiated = block.timestamp;\\r\\n        emit FraudChallengeDefeatTimeoutUpdateStarted(\\r\\n            _newFraudChallengeDefeatTimeout,\\r\\n            block.timestamp\\r\\n        );\\r\\n        /* solhint-enable not-rely-on-time */\\r\\n    }\\r\\n\\r\\n    /// @notice Finalizes the fraud challenge defeat timeout amount update process.\\r\\n    /// @dev Can be called after the governance delay elapses.\\r\\n    function finalizeFraudChallengeDefeatTimeoutUpdate(\\r\\n        FraudData storage self,\\r\\n        uint256 governanceDelay\\r\\n    )\\r\\n        external\\r\\n        onlyAfterGovernanceDelay(\\r\\n            self.fraudChallengeDefeatTimeoutChangeInitiated,\\r\\n            governanceDelay\\r\\n        )\\r\\n    {\\r\\n        emit FraudChallengeDefeatTimeoutUpdated(\\r\\n            self.newFraudChallengeDefeatTimeout\\r\\n        );\\r\\n\\r\\n        self.newFraudChallengeDefeatTimeout = 0;\\r\\n        self.fraudChallengeDefeatTimeoutChangeInitiated = 0;\\r\\n    }\\r\\n\\r\\n    /// @notice Begins the fraud slashing amount update process.\\r\\n    /// @param _newFraudSlashingAmount New fraud slashing amount.\\r\\n    function beginFraudSlashingAmountUpdate(\\r\\n        FraudData storage self,\\r\\n        uint96 _newFraudSlashingAmount\\r\\n    ) external {\\r\\n        /* solhint-disable not-rely-on-time */\\r\\n        self.newFraudSlashingAmount = _newFraudSlashingAmount;\\r\\n        self.fraudSlashingAmountChangeInitiated = block.timestamp;\\r\\n        emit FraudSlashingAmountUpdateStarted(\\r\\n            _newFraudSlashingAmount,\\r\\n            block.timestamp\\r\\n        );\\r\\n        /* solhint-enable not-rely-on-time */\\r\\n    }\\r\\n\\r\\n    /// @notice Finalizes the fraud slashing amount update process.\\r\\n    /// @dev Can be called after the governance delay elapses.\\r\\n    function finalizeFraudSlashingAmountUpdate(\\r\\n        FraudData storage self,\\r\\n        uint256 governanceDelay\\r\\n    )\\r\\n        external\\r\\n        onlyAfterGovernanceDelay(\\r\\n            self.fraudSlashingAmountChangeInitiated,\\r\\n            governanceDelay\\r\\n        )\\r\\n    {\\r\\n        emit FraudSlashingAmountUpdated(self.newFraudSlashingAmount);\\r\\n\\r\\n        self.newFraudSlashingAmount = 0;\\r\\n        self.fraudSlashingAmountChangeInitiated = 0;\\r\\n    }\\r\\n\\r\\n    /// @notice Begins the fraud notifier reward multiplier amount update process.\\r\\n    /// @param _newFraudNotifierRewardMultiplier New fraud notifier reward multiplier\\r\\n    ///         amount.\\r\\n    function beginFraudNotifierRewardMultiplierUpdate(\\r\\n        FraudData storage self,\\r\\n        uint32 _newFraudNotifierRewardMultiplier\\r\\n    ) external {\\r\\n        /* solhint-disable not-rely-on-time */\\r\\n        self\\r\\n            .newFraudNotifierRewardMultiplier = _newFraudNotifierRewardMultiplier;\\r\\n        self.fraudNotifierRewardMultiplierChangeInitiated = block.timestamp;\\r\\n        emit FraudNotifierRewardMultiplierUpdateStarted(\\r\\n            _newFraudNotifierRewardMultiplier,\\r\\n            block.timestamp\\r\\n        );\\r\\n        /* solhint-enable not-rely-on-time */\\r\\n    }\\r\\n\\r\\n    /// @notice Finalizes the fraud notifier reward multiplier amount update process.\\r\\n    /// @dev Can be called after the governance delay elapses.\\r\\n    function finalizeFraudNotifierRewardMultiplierUpdate(\\r\\n        FraudData storage self,\\r\\n        uint256 governanceDelay\\r\\n    )\\r\\n        external\\r\\n        onlyAfterGovernanceDelay(\\r\\n            self.fraudNotifierRewardMultiplierChangeInitiated,\\r\\n            governanceDelay\\r\\n        )\\r\\n    {\\r\\n        emit FraudNotifierRewardMultiplierUpdated(\\r\\n            self.newFraudNotifierRewardMultiplier\\r\\n        );\\r\\n\\r\\n        self.newFraudNotifierRewardMultiplier = 0;\\r\\n        self.fraudNotifierRewardMultiplierChangeInitiated = 0;\\r\\n    }\\r\\n\\r\\n    /// @notice Begins the treasury address update process.\\r\\n    /// @dev It does not perform any parameter validation.\\r\\n    /// @param _newTreasury New treasury address.\\r\\n    function beginTreasuryUpdate(\\r\\n        TreasuryData storage self,\\r\\n        address _newTreasury\\r\\n    ) external {\\r\\n        /* solhint-disable not-rely-on-time */\\r\\n        self.newTreasury = _newTreasury;\\r\\n        self.treasuryChangeInitiated = block.timestamp;\\r\\n        emit TreasuryUpdateStarted(_newTreasury, block.timestamp);\\r\\n        /* solhint-enable not-rely-on-time */\\r\\n    }\\r\\n\\r\\n    /// @notice Finalizes the treasury address update process.\\r\\n    /// @dev Can be called after the governance delay elapses.\\r\\n    function finalizeTreasuryUpdate(\\r\\n        TreasuryData storage self,\\r\\n        uint256 governanceDelay\\r\\n    )\\r\\n        external\\r\\n        onlyAfterGovernanceDelay(self.treasuryChangeInitiated, governanceDelay)\\r\\n    {\\r\\n        emit TreasuryUpdated(self.newTreasury);\\r\\n\\r\\n        self.newTreasury = address(0);\\r\\n        self.treasuryChangeInitiated = 0;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x77b64ce0931bd7be9d41b530f42dda9d0e9bd501b657977fd78ca66220647f8e\",\"license\":\"GPL-3.0-only\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "beginDepositDustThresholdUpdate(BridgeGovernanceParameters.DepositData storage,uint64)": {
        "params": {
          "_newDepositDustThreshold": "New deposit dust threshold amount."
        }
      },
      "beginDepositRevealAheadPeriodUpdate(BridgeGovernanceParameters.DepositData storage,uint32)": {
        "params": {
          "_newDepositRevealAheadPeriod": "New deposit reveal ahead period."
        }
      },
      "beginDepositTreasuryFeeDivisorUpdate(BridgeGovernanceParameters.DepositData storage,uint64)": {
        "params": {
          "_newDepositTreasuryFeeDivisor": "New deposit treasury fee divisor amount."
        }
      },
      "beginDepositTxMaxFeeUpdate(BridgeGovernanceParameters.DepositData storage,uint64)": {
        "params": {
          "_newDepositTxMaxFee": "New deposit tx max fee amount."
        }
      },
      "beginFraudChallengeDefeatTimeoutUpdate(BridgeGovernanceParameters.FraudData storage,uint32)": {
        "params": {
          "_newFraudChallengeDefeatTimeout": "New fraud challenge defeat timeout         amount."
        }
      },
      "beginFraudChallengeDepositAmountUpdate(BridgeGovernanceParameters.FraudData storage,uint96)": {
        "params": {
          "_newFraudChallengeDepositAmount": "New fraud challenge deposit amount."
        }
      },
      "beginFraudNotifierRewardMultiplierUpdate(BridgeGovernanceParameters.FraudData storage,uint32)": {
        "params": {
          "_newFraudNotifierRewardMultiplier": "New fraud notifier reward multiplier         amount."
        }
      },
      "beginFraudSlashingAmountUpdate(BridgeGovernanceParameters.FraudData storage,uint96)": {
        "params": {
          "_newFraudSlashingAmount": "New fraud slashing amount."
        }
      },
      "beginMovedFundsSweepTimeoutNotifierRewardMultiplierUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint32)": {
        "params": {
          "_newMovedFundsSweepTimeoutNotifierRewardMultiplier": "New moved funds         sweep timeout notifier reward multiplier amount."
        }
      },
      "beginMovedFundsSweepTimeoutSlashingAmountUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint96)": {
        "params": {
          "_newMovedFundsSweepTimeoutSlashingAmount": "New moved funds sweep         timeout slashing amount."
        }
      },
      "beginMovedFundsSweepTimeoutUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint32)": {
        "params": {
          "_newMovedFundsSweepTimeout": "New moved funds sweep timeout amount."
        }
      },
      "beginMovedFundsSweepTxMaxTotalFeeUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint64)": {
        "params": {
          "_newMovedFundsSweepTxMaxTotalFee": "New moved funds sweep tx max total         fee amount."
        }
      },
      "beginMovingFundsCommitmentGasOffsetUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint16)": {
        "params": {
          "_newMovingFundsCommitmentGasOffset": "New moving funds commitment        gas offset."
        }
      },
      "beginMovingFundsDustThresholdUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint64)": {
        "params": {
          "_newMovingFundsDustThreshold": "New moving funds dust threshold amount."
        }
      },
      "beginMovingFundsTimeoutNotifierRewardMultiplierUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint32)": {
        "params": {
          "_newMovingFundsTimeoutNotifierRewardMultiplier": "New moving funds         timeout notifier reward multiplier amount."
        }
      },
      "beginMovingFundsTimeoutResetDelayUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint32)": {
        "params": {
          "_newMovingFundsTimeoutResetDelay": "New moving funds timeout reset         delay amount."
        }
      },
      "beginMovingFundsTimeoutSlashingAmountUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint96)": {
        "params": {
          "_newMovingFundsTimeoutSlashingAmount": "New moving funds timeout slashing amount."
        }
      },
      "beginMovingFundsTimeoutUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint32)": {
        "params": {
          "_newMovingFundsTimeout": "New moving funds timeout amount."
        }
      },
      "beginMovingFundsTxMaxTotalFeeUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint64)": {
        "params": {
          "_newMovingFundsTxMaxTotalFee": "New moving funds tx max total fee amount."
        }
      },
      "beginRedemptionDustThresholdUpdate(BridgeGovernanceParameters.RedemptionData storage,uint64)": {
        "params": {
          "_newRedemptionDustThreshold": "New redemption dust threshold amount."
        }
      },
      "beginRedemptionTimeoutNotifierRewardMultiplierUpdate(BridgeGovernanceParameters.RedemptionData storage,uint32)": {
        "params": {
          "_newRedemptionTimeoutNotifierRewardMultiplier": "New redemption         timeout notifier reward multiplier amount."
        }
      },
      "beginRedemptionTimeoutSlashingAmountUpdate(BridgeGovernanceParameters.RedemptionData storage,uint96)": {
        "params": {
          "_newRedemptionTimeoutSlashingAmount": "New redemption timeout slashing         amount."
        }
      },
      "beginRedemptionTimeoutUpdate(BridgeGovernanceParameters.RedemptionData storage,uint32)": {
        "params": {
          "_newRedemptionTimeout": "New redemption timeout amount."
        }
      },
      "beginRedemptionTreasuryFeeDivisorUpdate(BridgeGovernanceParameters.RedemptionData storage,uint64)": {
        "params": {
          "_newRedemptionTreasuryFeeDivisor": "New redemption treasury fee divisor         amount."
        }
      },
      "beginRedemptionTxMaxFeeUpdate(BridgeGovernanceParameters.RedemptionData storage,uint64)": {
        "params": {
          "_newRedemptionTxMaxFee": "New redemption tx max fee amount."
        }
      },
      "beginRedemptionTxMaxTotalFeeUpdate(BridgeGovernanceParameters.RedemptionData storage,uint64)": {
        "params": {
          "_newRedemptionTxMaxTotalFee": "New redemption tx max total fee amount."
        }
      },
      "beginTreasuryUpdate(BridgeGovernanceParameters.TreasuryData storage,address)": {
        "details": "It does not perform any parameter validation.",
        "params": {
          "_newTreasury": "New treasury address."
        }
      },
      "beginWalletClosingPeriodUpdate(BridgeGovernanceParameters.WalletData storage,uint32)": {
        "params": {
          "_newWalletClosingPeriod": "New wallet closing period amount."
        }
      },
      "beginWalletClosureMinBtcBalanceUpdate(BridgeGovernanceParameters.WalletData storage,uint64)": {
        "params": {
          "_newWalletClosureMinBtcBalance": "New wallet closure min btc balance amount."
        }
      },
      "beginWalletCreationMaxBtcBalanceUpdate(BridgeGovernanceParameters.WalletData storage,uint64)": {
        "params": {
          "_newWalletCreationMaxBtcBalance": "New wallet creation max btc balance         amount."
        }
      },
      "beginWalletCreationMinBtcBalanceUpdate(BridgeGovernanceParameters.WalletData storage,uint64)": {
        "params": {
          "_newWalletCreationMinBtcBalance": "New wallet creation min btc balance         amount."
        }
      },
      "beginWalletCreationPeriodUpdate(BridgeGovernanceParameters.WalletData storage,uint32)": {
        "params": {
          "_newWalletCreationPeriod": "New wallet creation period amount."
        }
      },
      "beginWalletMaxAgeUpdate(BridgeGovernanceParameters.WalletData storage,uint32)": {
        "params": {
          "_newWalletMaxAge": "New wallet max age amount."
        }
      },
      "beginWalletMaxBtcTransferUpdate(BridgeGovernanceParameters.WalletData storage,uint64)": {
        "params": {
          "_newWalletMaxBtcTransfer": "New wallet max btc transfer amount."
        }
      },
      "finalizeDepositDustThresholdUpdate(BridgeGovernanceParameters.DepositData storage,uint256)": {
        "details": "Can be called after the governance delay elapses."
      },
      "finalizeDepositRevealAheadPeriodUpdate(BridgeGovernanceParameters.DepositData storage,uint256)": {
        "details": "Can be called after the governance delay elapses."
      },
      "finalizeDepositTreasuryFeeDivisorUpdate(BridgeGovernanceParameters.DepositData storage,uint256)": {
        "details": "Can be called after the governance delay elapses."
      },
      "finalizeDepositTxMaxFeeUpdate(BridgeGovernanceParameters.DepositData storage,uint256)": {
        "details": "Can be called after the governance delay elapses."
      },
      "finalizeFraudChallengeDefeatTimeoutUpdate(BridgeGovernanceParameters.FraudData storage,uint256)": {
        "details": "Can be called after the governance delay elapses."
      },
      "finalizeFraudChallengeDepositAmountUpdate(BridgeGovernanceParameters.FraudData storage,uint256)": {
        "details": "Can be called after the governance delay elapses."
      },
      "finalizeFraudNotifierRewardMultiplierUpdate(BridgeGovernanceParameters.FraudData storage,uint256)": {
        "details": "Can be called after the governance delay elapses."
      },
      "finalizeFraudSlashingAmountUpdate(BridgeGovernanceParameters.FraudData storage,uint256)": {
        "details": "Can be called after the governance delay elapses."
      },
      "finalizeMovedFundsSweepTimeoutNotifierRewardMultiplierUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)": {
        "details": "Can be called after the governance delay elapses."
      },
      "finalizeMovedFundsSweepTimeoutSlashingAmountUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)": {
        "details": "Can be called after the governance delay elapses."
      },
      "finalizeMovedFundsSweepTimeoutUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)": {
        "details": "Can be called after the governance delay elapses."
      },
      "finalizeMovedFundsSweepTxMaxTotalFeeUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)": {
        "details": "Can be called after the governance delay elapses."
      },
      "finalizeMovingFundsCommitmentGasOffsetUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)": {
        "details": "Can be called after the governance delay elapses."
      },
      "finalizeMovingFundsDustThresholdUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)": {
        "details": "Can be called after the governance delay elapses."
      },
      "finalizeMovingFundsTimeoutNotifierRewardMultiplierUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)": {
        "details": "Can be called after the governance delay elapses."
      },
      "finalizeMovingFundsTimeoutResetDelayUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)": {
        "details": "Can be called after the governance delay elapses."
      },
      "finalizeMovingFundsTimeoutSlashingAmountUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)": {
        "details": "Can be called after the governance delay elapses."
      },
      "finalizeMovingFundsTimeoutUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)": {
        "details": "Can be called after the governance delay elapses."
      },
      "finalizeMovingFundsTxMaxTotalFeeUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)": {
        "details": "Can be called after the governance delay elapses."
      },
      "finalizeRedemptionDustThresholdUpdate(BridgeGovernanceParameters.RedemptionData storage,uint256)": {
        "details": "Can be called after the governance delay elapses."
      },
      "finalizeRedemptionTimeoutNotifierRewardMultiplierUpdate(BridgeGovernanceParameters.RedemptionData storage,uint256)": {
        "details": "Can be called after the governance delay elapses."
      },
      "finalizeRedemptionTimeoutSlashingAmountUpdate(BridgeGovernanceParameters.RedemptionData storage,uint256)": {
        "details": "Can be called after the governance delay elapses."
      },
      "finalizeRedemptionTimeoutUpdate(BridgeGovernanceParameters.RedemptionData storage,uint256)": {
        "details": "Can be called after the governance delay elapses."
      },
      "finalizeRedemptionTreasuryFeeDivisorUpdate(BridgeGovernanceParameters.RedemptionData storage,uint256)": {
        "details": "Can be called after the governance delay elapses."
      },
      "finalizeRedemptionTxMaxFeeUpdate(BridgeGovernanceParameters.RedemptionData storage,uint256)": {
        "details": "Can be called after the governance delay elapses."
      },
      "finalizeRedemptionTxMaxTotalFeeUpdate(BridgeGovernanceParameters.RedemptionData storage,uint256)": {
        "details": "Can be called after the governance delay elapses."
      },
      "finalizeTreasuryUpdate(BridgeGovernanceParameters.TreasuryData storage,uint256)": {
        "details": "Can be called after the governance delay elapses."
      },
      "finalizeWalletClosingPeriodUpdate(BridgeGovernanceParameters.WalletData storage,uint256)": {
        "details": "Can be called after the governance delay elapses."
      },
      "finalizeWalletClosureMinBtcBalanceUpdate(BridgeGovernanceParameters.WalletData storage,uint256)": {
        "details": "Can be called after the governance delay elapses."
      },
      "finalizeWalletCreationMaxBtcBalanceUpdate(BridgeGovernanceParameters.WalletData storage,uint256)": {
        "details": "Can be called after the governance delay elapses."
      },
      "finalizeWalletCreationMinBtcBalanceUpdate(BridgeGovernanceParameters.WalletData storage,uint256)": {
        "details": "Can be called after the governance delay elapses."
      },
      "finalizeWalletCreationPeriodUpdate(BridgeGovernanceParameters.WalletData storage,uint256)": {
        "details": "Can be called after the governance delay elapses."
      },
      "finalizeWalletMaxAgeUpdate(BridgeGovernanceParameters.WalletData storage,uint256)": {
        "details": "Can be called after the governance delay elapses."
      },
      "finalizeWalletMaxBtcTransferUpdate(BridgeGovernanceParameters.WalletData storage,uint256)": {
        "details": "Can be called after the governance delay elapses."
      }
    },
    "title": "Bridge Governance library for storing updatable parameters.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "beginDepositDustThresholdUpdate(BridgeGovernanceParameters.DepositData storage,uint64)": {
        "notice": "Begins the deposit dust threshold amount update process."
      },
      "beginDepositRevealAheadPeriodUpdate(BridgeGovernanceParameters.DepositData storage,uint32)": {
        "notice": "Begins the deposit reveal ahead period update process."
      },
      "beginDepositTreasuryFeeDivisorUpdate(BridgeGovernanceParameters.DepositData storage,uint64)": {
        "notice": "Begins the deposit treasury fee divisor amount update process."
      },
      "beginDepositTxMaxFeeUpdate(BridgeGovernanceParameters.DepositData storage,uint64)": {
        "notice": "Begins the deposit tx max fee amount update process."
      },
      "beginFraudChallengeDefeatTimeoutUpdate(BridgeGovernanceParameters.FraudData storage,uint32)": {
        "notice": "Begins the fraud challenge defeat timeout amount update process."
      },
      "beginFraudChallengeDepositAmountUpdate(BridgeGovernanceParameters.FraudData storage,uint96)": {
        "notice": "Begins the fraud challenge deposit amount update process."
      },
      "beginFraudNotifierRewardMultiplierUpdate(BridgeGovernanceParameters.FraudData storage,uint32)": {
        "notice": "Begins the fraud notifier reward multiplier amount update process."
      },
      "beginFraudSlashingAmountUpdate(BridgeGovernanceParameters.FraudData storage,uint96)": {
        "notice": "Begins the fraud slashing amount update process."
      },
      "beginMovedFundsSweepTimeoutNotifierRewardMultiplierUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint32)": {
        "notice": "Begins the moved funds sweep timeout notifier reward multiplier         amount update process."
      },
      "beginMovedFundsSweepTimeoutSlashingAmountUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint96)": {
        "notice": "Begins the moved funds sweep timeout slashing amount update         process."
      },
      "beginMovedFundsSweepTimeoutUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint32)": {
        "notice": "Begins the moved funds sweep timeout amount update process."
      },
      "beginMovedFundsSweepTxMaxTotalFeeUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint64)": {
        "notice": "Begins the moved funds sweep tx max total fee amount update process."
      },
      "beginMovingFundsCommitmentGasOffsetUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint16)": {
        "notice": "Begins the moving funds commitment gas offset update process."
      },
      "beginMovingFundsDustThresholdUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint64)": {
        "notice": "Begins the moving funds dust threshold amount update process."
      },
      "beginMovingFundsTimeoutNotifierRewardMultiplierUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint32)": {
        "notice": "Begins the moving funds timeout notifier reward multiplier amount         update process."
      },
      "beginMovingFundsTimeoutResetDelayUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint32)": {
        "notice": "Begins the moving funds timeout reset delay amount update process."
      },
      "beginMovingFundsTimeoutSlashingAmountUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint96)": {
        "notice": "Begins the moving funds timeout slashing amount update process."
      },
      "beginMovingFundsTimeoutUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint32)": {
        "notice": "Begins the moving funds timeout amount update process."
      },
      "beginMovingFundsTxMaxTotalFeeUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint64)": {
        "notice": "Begins the moving funds tx max total fee amount update process."
      },
      "beginRedemptionDustThresholdUpdate(BridgeGovernanceParameters.RedemptionData storage,uint64)": {
        "notice": "Begins the redemption dust threshold amount update process."
      },
      "beginRedemptionTimeoutNotifierRewardMultiplierUpdate(BridgeGovernanceParameters.RedemptionData storage,uint32)": {
        "notice": "Begins the redemption timeout notifier reward multiplier amount         update process."
      },
      "beginRedemptionTimeoutSlashingAmountUpdate(BridgeGovernanceParameters.RedemptionData storage,uint96)": {
        "notice": "Begins the redemption timeout slashing amount update process."
      },
      "beginRedemptionTimeoutUpdate(BridgeGovernanceParameters.RedemptionData storage,uint32)": {
        "notice": "Begins the redemption timeout amount update process."
      },
      "beginRedemptionTreasuryFeeDivisorUpdate(BridgeGovernanceParameters.RedemptionData storage,uint64)": {
        "notice": "Begins the redemption treasury fee divisor amount update process."
      },
      "beginRedemptionTxMaxFeeUpdate(BridgeGovernanceParameters.RedemptionData storage,uint64)": {
        "notice": "Begins the redemption tx max fee amount update process."
      },
      "beginRedemptionTxMaxTotalFeeUpdate(BridgeGovernanceParameters.RedemptionData storage,uint64)": {
        "notice": "Begins the redemption tx max total fee amount update process."
      },
      "beginTreasuryUpdate(BridgeGovernanceParameters.TreasuryData storage,address)": {
        "notice": "Begins the treasury address update process."
      },
      "beginWalletClosingPeriodUpdate(BridgeGovernanceParameters.WalletData storage,uint32)": {
        "notice": "Begins the wallet closing period amount update process."
      },
      "beginWalletClosureMinBtcBalanceUpdate(BridgeGovernanceParameters.WalletData storage,uint64)": {
        "notice": "Begins the wallet closure min btc balance amount update process."
      },
      "beginWalletCreationMaxBtcBalanceUpdate(BridgeGovernanceParameters.WalletData storage,uint64)": {
        "notice": "Begins the wallet creation max btc balance amount update process."
      },
      "beginWalletCreationMinBtcBalanceUpdate(BridgeGovernanceParameters.WalletData storage,uint64)": {
        "notice": "Begins the wallet creation min btc balance amount update process."
      },
      "beginWalletCreationPeriodUpdate(BridgeGovernanceParameters.WalletData storage,uint32)": {
        "notice": "Begins the wallet creation period amount update process."
      },
      "beginWalletMaxAgeUpdate(BridgeGovernanceParameters.WalletData storage,uint32)": {
        "notice": "Begins the wallet max age amount update process."
      },
      "beginWalletMaxBtcTransferUpdate(BridgeGovernanceParameters.WalletData storage,uint64)": {
        "notice": "Begins the wallet max btc transfer amount update process."
      },
      "finalizeDepositDustThresholdUpdate(BridgeGovernanceParameters.DepositData storage,uint256)": {
        "notice": "Finalizes the deposit dust threshold amount update process."
      },
      "finalizeDepositRevealAheadPeriodUpdate(BridgeGovernanceParameters.DepositData storage,uint256)": {
        "notice": "Finalizes the deposit reveal ahead period update process."
      },
      "finalizeDepositTreasuryFeeDivisorUpdate(BridgeGovernanceParameters.DepositData storage,uint256)": {
        "notice": "Finalizes the deposit treasury fee divisor amount update process."
      },
      "finalizeDepositTxMaxFeeUpdate(BridgeGovernanceParameters.DepositData storage,uint256)": {
        "notice": "Finalizes the deposit tx max fee amount update process."
      },
      "finalizeFraudChallengeDefeatTimeoutUpdate(BridgeGovernanceParameters.FraudData storage,uint256)": {
        "notice": "Finalizes the fraud challenge defeat timeout amount update process."
      },
      "finalizeFraudChallengeDepositAmountUpdate(BridgeGovernanceParameters.FraudData storage,uint256)": {
        "notice": "Finalizes the fraud challenge deposit amount update process."
      },
      "finalizeFraudNotifierRewardMultiplierUpdate(BridgeGovernanceParameters.FraudData storage,uint256)": {
        "notice": "Finalizes the fraud notifier reward multiplier amount update process."
      },
      "finalizeFraudSlashingAmountUpdate(BridgeGovernanceParameters.FraudData storage,uint256)": {
        "notice": "Finalizes the fraud slashing amount update process."
      },
      "finalizeMovedFundsSweepTimeoutNotifierRewardMultiplierUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)": {
        "notice": "Finalizes the moved funds sweep timeout notifier reward multiplier         amount update process."
      },
      "finalizeMovedFundsSweepTimeoutSlashingAmountUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)": {
        "notice": "Finalizes the moved funds sweep timeout slashing amount         update process."
      },
      "finalizeMovedFundsSweepTimeoutUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)": {
        "notice": "Finalizes the moved funds sweep timeout amount update process."
      },
      "finalizeMovedFundsSweepTxMaxTotalFeeUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)": {
        "notice": "Finalizes the moved funds sweep tx max total fee amount update         process."
      },
      "finalizeMovingFundsCommitmentGasOffsetUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)": {
        "notice": "Finalizes the moving funds commitment gas offset update process."
      },
      "finalizeMovingFundsDustThresholdUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)": {
        "notice": "Finalizes the moving funds dust threshold amount update process."
      },
      "finalizeMovingFundsTimeoutNotifierRewardMultiplierUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)": {
        "notice": "Finalizes the moving funds timeout notifier reward multiplier         amount update process."
      },
      "finalizeMovingFundsTimeoutResetDelayUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)": {
        "notice": "Finalizes the moving funds timeout reset delay amount update process."
      },
      "finalizeMovingFundsTimeoutSlashingAmountUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)": {
        "notice": "Finalizes the moving funds timeout slashing amount update process."
      },
      "finalizeMovingFundsTimeoutUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)": {
        "notice": "Finalizes the moving funds timeout amount update process."
      },
      "finalizeMovingFundsTxMaxTotalFeeUpdate(BridgeGovernanceParameters.MovingFundsData storage,uint256)": {
        "notice": "Finalizes the moving funds tx max total fee amount update process."
      },
      "finalizeRedemptionDustThresholdUpdate(BridgeGovernanceParameters.RedemptionData storage,uint256)": {
        "notice": "Finalizes the redemption dust threshold amount update process."
      },
      "finalizeRedemptionTimeoutNotifierRewardMultiplierUpdate(BridgeGovernanceParameters.RedemptionData storage,uint256)": {
        "notice": "Finalizes the redemption timeout notifier reward multiplier amount update process."
      },
      "finalizeRedemptionTimeoutSlashingAmountUpdate(BridgeGovernanceParameters.RedemptionData storage,uint256)": {
        "notice": "Finalizes the redemption timeout slashing amount update process."
      },
      "finalizeRedemptionTimeoutUpdate(BridgeGovernanceParameters.RedemptionData storage,uint256)": {
        "notice": "Finalizes the redemption timeout amount update         process."
      },
      "finalizeRedemptionTreasuryFeeDivisorUpdate(BridgeGovernanceParameters.RedemptionData storage,uint256)": {
        "notice": "Finalizes the redemption treasury fee divisor amount update process."
      },
      "finalizeRedemptionTxMaxFeeUpdate(BridgeGovernanceParameters.RedemptionData storage,uint256)": {
        "notice": "Finalizes the redemption tx max fee amount update process."
      },
      "finalizeRedemptionTxMaxTotalFeeUpdate(BridgeGovernanceParameters.RedemptionData storage,uint256)": {
        "notice": "Finalizes the redemption tx max total fee amount update process."
      },
      "finalizeTreasuryUpdate(BridgeGovernanceParameters.TreasuryData storage,uint256)": {
        "notice": "Finalizes the treasury address update process."
      },
      "finalizeWalletClosingPeriodUpdate(BridgeGovernanceParameters.WalletData storage,uint256)": {
        "notice": "Finalizes the wallet closing period amount update process."
      },
      "finalizeWalletClosureMinBtcBalanceUpdate(BridgeGovernanceParameters.WalletData storage,uint256)": {
        "notice": "Finalizes the wallet closure min btc balance amount update process."
      },
      "finalizeWalletCreationMaxBtcBalanceUpdate(BridgeGovernanceParameters.WalletData storage,uint256)": {
        "notice": "Finalizes the wallet creation max btc balance amount update process."
      },
      "finalizeWalletCreationMinBtcBalanceUpdate(BridgeGovernanceParameters.WalletData storage,uint256)": {
        "notice": "Finalizes the wallet creation min btc balance amount update process."
      },
      "finalizeWalletCreationPeriodUpdate(BridgeGovernanceParameters.WalletData storage,uint256)": {
        "notice": "Finalizes the wallet creation period amount update process."
      },
      "finalizeWalletMaxAgeUpdate(BridgeGovernanceParameters.WalletData storage,uint256)": {
        "notice": "Finalizes the wallet max age amount update process."
      },
      "finalizeWalletMaxBtcTransferUpdate(BridgeGovernanceParameters.WalletData storage,uint256)": {
        "notice": "Finalizes the wallet max btc transfer amount update process."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}
